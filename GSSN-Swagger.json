{
	"swagger": "2.0",
	"info": {
		"description": "<img src=\"../gssnplus.svg\" height=\"60px\"/>\n\nGSSN+ is the Global Standard Source for Network data.\n\nWe provide master data for the company's authorized sales and service network worldwide as well as for selected companies and independent organizations. This service offers APIs to query GSSN+ specific data.\n\nTo query the GSSN+ API a valid API-key is required, which can be requested at oneAPI Hub:\nhttps://developer.corpinter.net/apis/gssnplus\n\nTo use the APIs, enter your valid API key first by clicking on the \"Authorize\" button on the right, then try out your desired API below.\n\nA simple health check endpoint is provided under the path <a href=\"../../gssnplus-api/health\" target=\"_blank\">/gssnplus-api/health</a>.<br/><br/><b>NOTE:</b> Please kindly ignore the <b>_links</b> attribute in the Swagger documentation example and refer to the actual response instead.",
		"title": "GSSN+ API"
	},
	"host": "gssnplus-int.i.daimler.com",
	"basePath": "/int/gssnplus-api/",
	"tags": [
		{
			"name": "Base Data",
			"description": " "
		},
		{
			"name": "Communications",
			"description": " "
		},
		{
			"name": "Complete Outlet",
			"description": " "
		},
		{
			"name": "Contracts",
			"description": " "
		},
		{
			"name": "External Keys",
			"description": " "
		},
		{
			"name": "Language",
			"description": " "
		},
		{
			"name": "Legal Info",
			"description": " "
		},
		{
			"name": "Opening Hours",
			"description": " "
		},
		{
			"name": "Outlet",
			"description": " "
		},
		{
			"name": "Relationships",
			"description": " "
		},
		{
			"name": "Services",
			"description": " "
		},
		{
			"name": "Structures",
			"description": " "
		}
	],
	"paths": {
		"/api/v1/brands": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available brands.",
				"operationId": "allBrandsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Brand»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/brands/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query brand by ID.",
				"operationId": "brandByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The brand ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Brand"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/catalogs": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available catalogs.",
				"operationId": "allCatalogsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Catalog»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/catalogs/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query catalog by ID.",
				"operationId": "catalogByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The catalog ID",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Catalog"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/close-down-reasons": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available close-down reasons.",
				"operationId": "allCloseDownReasonsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«CloseDownReason»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/close-down-reasons/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query close-down reason by ID.",
				"operationId": "closeDownReasonByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of close-down reason.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CloseDownReason"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/communication-fields": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query all available communication fields.",
				"description": "Get all communication fields.",
				"operationId": "allCommunicationFieldsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryCommunicationField»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/communication-fields/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query communication field.",
				"description": "Query a specific communication field by {id}",
				"operationId": "communicationFieldByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of communication field",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCommunicationField"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/companies/{companyId}/legalinfo": {
			"get": {
				"tags": [
					"Legal Info"
				],
				"summary": "Query legal info of a company",
				"operationId": "companyLegalInfoByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "companyId",
						"in": "path",
						"description": "ID of company",
						"required": true,
						"type": "string",
						"x-example": "GC1234567"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryLegalInfoCompany"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/complete-outlets": {
			"get": {
				"tags": [
					"Complete Outlet"
				],
				"summary": "Query all complete outlet file",
				"operationId": "allCompleteOutletFileUsingGET",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Query successfully",
						"schema": {
							"$ref": "#/definitions/InputStreamResource"
						}
					},
					"400": {
						"description": "Query failed"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/complete-outlets/countries/{countryId}": {
			"get": {
				"tags": [
					"Complete Outlet"
				],
				"summary": "Query complete outlet file by countryId",
				"operationId": "completeOutletFileByUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "countryId",
						"in": "path",
						"description": "The country ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Query successfully",
						"schema": {
							"$ref": "#/definitions/InputStreamResource"
						}
					},
					"400": {
						"description": "Query failed"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/complete-outlets/{outletId}": {
			"get": {
				"tags": [
					"Complete Outlet"
				],
				"summary": "Query an outlet by ID.",
				"operationId": "completeOutletByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompleteOutlet"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/countries": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available countries.",
				"operationId": "allCountriesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryCountry»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/countries/{countryId}/country-structure-descriptions": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country structure description by Country ID.",
				"operationId": "countryStructureDescriptionByCountryIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "countryId",
						"in": "path",
						"description": "The country ISO 3166-2 code",
						"required": true,
						"type": "string",
						"x-example": "US"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCountryStructureDescriptionStructure"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/countries/{countryId}/country-structures": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country structure by Country ID.",
				"operationId": "countryStructureByCountryIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "countryId",
						"in": "path",
						"description": "The country ISO 3166-2 code",
						"required": true,
						"type": "string",
						"x-example": "US"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCountryCountryStructure"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/countries/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country by ID.",
				"operationId": "countryByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The country ISO 3166-2 code",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCountry"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/country-groups": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available country groups.",
				"operationId": "allCountryGroupsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«CountryGroup»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/country-groups/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country group by ID.",
				"operationId": "countryGroupByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The ID of the country group",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CountryGroup"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/country-structure-descriptions/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country structure description by ID.",
				"operationId": "countryStructureDescriptionByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The country structure description ID",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 1
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCountryStructureDescription"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/country-structures/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query country structure by ID.",
				"operationId": "countryStructureByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The country structure ID",
						"required": true,
						"type": "string",
						"x-example": "A01A_MARKET01"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryDirectCountryStructureHierarchy"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/dealer-groups": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query dealer group by dealer group IDs / dealer group names / country IDs",
				"operationId": "allDealerGroupsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "activeOnly",
						"in": "query",
						"description": "Query only active dealer group",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "countryIsoCode",
						"in": "query",
						"description": "Query by list of country iso codes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "delearGroupId",
						"in": "query",
						"description": "Query by list of dealer group ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Query by list of dealer group name with regex search",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryDealerGroup»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/dealer-groups/{dealerGroupId}": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query dealer group by dealer group ID",
				"operationId": "dealerGroupByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "activeOnly",
						"in": "query",
						"description": "Query only active Dealer Group",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "dealerGroupId",
						"in": "path",
						"description": "Dealer group ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryDealerGroup"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/external-keys": {
			"get": {
				"tags": [
					"External Keys"
				],
				"summary": "Query external keys by list of company ID or external key ID or list of outlet ID",
				"operationId": "allExternalKeysUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "companyId",
						"in": "query",
						"description": "Query by list of company ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "externalKeyType",
						"in": "query",
						"description": "Query by list of external key type",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "outletId",
						"in": "query",
						"description": "Query by list of outlet ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ExternalKeys»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/general-groups": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query general group by general group IDs / general group names / country IDs / members",
				"operationId": "allGeneralGroupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "countryIsoCode",
						"in": "query",
						"description": "Query by list of country iso codes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "generalGroupId",
						"in": "query",
						"description": "Query by list of general group ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Query by list of general group name with regex search",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "outletId",
						"in": "query",
						"description": "Query by list of member outlet ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryGeneralGroup»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/general-groups/{generalGroupId}": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query general group by ID",
				"operationId": "generalGroupByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "generalGroupId",
						"in": "path",
						"description": "The general group ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryGeneralGroup"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/key-types": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query all available key types.",
				"description": "Get all available key types.",
				"operationId": "allKeyTypesUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryKeyType»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/key-types/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query key type",
				"description": "Query a specific key type by ID",
				"operationId": "keyTypeByUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of key type",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryKeyType"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/labels": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available labels.",
				"operationId": "allLabelsUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryLabel»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/labels/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query label by ID.",
				"operationId": "labelByUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The label ID.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryLabel"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/languages": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query available languages.",
				"operationId": "allLanguagesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Language»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/languages/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query language by ID.",
				"operationId": "languageByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The language locale",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Language"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/market-areas": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query market area by market area IDs / market area names / country IDs",
				"operationId": "allMarketAreasUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "categoryId",
						"in": "query",
						"description": "Query by category ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "countryIsoCode",
						"in": "query",
						"description": "Query by list of country iso codes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "marketAreaId",
						"in": "query",
						"description": "Query by list of market area ID",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Query by list of market area name with regex search",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryMarketArea»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/market-areas/{marketAreaId}": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query market area by market area ID",
				"operationId": "marketAreaByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "marketAreaId",
						"in": "path",
						"description": "Market area ID",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryMarketArea"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/master-data": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query all master data.",
				"operationId": "masterDataUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/QueryMasterData"
							}
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/model-series": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query all model series.",
				"operationId": "allModelSeriesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ModelSeries»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/model-series/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query model series by ID.",
				"operationId": "modelSeriesByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The model series ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelSeries"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/opening-hours": {
			"get": {
				"tags": [
					"Base Data",
					"Opening Hours",
					"Outlet",
					"Services"
				],
				"summary": "Query opening hours version 1 with optional outlets / offered service / from (MM-dd-yyyy) / to (MM-dd-yyyy)",
				"operationId": "allOpeningHoursV1UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "companyIds",
						"in": "query",
						"description": "Query by list of company IDs (either outlet IDs or company IDs must be given)",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "fromDate",
						"in": "query",
						"description": "First day of the interval, in the format MM-dd-yyyy",
						"required": false,
						"type": "string",
						"format": "date-time",
						"x-example": "12-31-2020"
					},
					{
						"name": "outletIds",
						"in": "query",
						"description": "Query by list of outlet IDs (either outlet IDs or company IDs must be given)",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					},
					{
						"name": "serviceId",
						"in": "query",
						"description": "Query by list of services IDs offered by outlet",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "Last day of the interval, in the format MM-dd-yyyy",
						"required": false,
						"type": "string",
						"format": "date-time",
						"x-example": "12-31-2020"
					}
				],
				"responses": {
					"200": {
						"description": "Search query executed properly",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryOpeningHour»»"
						}
					},
					"400": {
						"description": "Both of companyIds and outletIds are empty."
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/offered-services": {
			"get": {
				"tags": [
					"Services"
				],
				"summary": "Query offered services for multiple outlets by their ID. If one or more of the given outlet IDs are invalid or unknown, they will be silently ignored.",
				"operationId": "offeredServicesByUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "companyIds",
						"in": "query",
						"description": "IDs of the companies to return the offered services for.",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "outletIds",
						"in": "query",
						"description": "IDs of the outlets to return the offered services for.",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Offered services found",
						"schema": {
							"$ref": "#/definitions/QueryOfferedServices"
						}
					},
					"204": {
						"description": "No offered services found all business site IDs"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/search": {
			"post": {
				"tags": [
					"Outlet"
				],
				"summary": "Query for outlets by search query.",
				"operationId": "outletQueryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					},
					{
						"in": "body",
						"name": "resource",
						"description": "The search query.<br/>The following parameters have a default value when they are unspecified:<br/><ul><li><i>includeApplicants=false</i></li><li><i>onlyActive=true</i></li><li><i>showRegisteredOfficesOnly=false</i></li></ul><br/>To optimize a search, it is recommended to:<br/><i><ul><li>include country Id in search criteria.</li><li>avoid using only wildcard character. eg. companyIds: [ * ]</li><li>exclude empty array. eg. cities: []</li></ul></i>",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Query"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Outlet»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}": {
			"get": {
				"tags": [
					"Outlet"
				],
				"summary": "Query an outlet by ID.",
				"operationId": "outletV1ByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Outlet"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/brand-labels": {
			"get": {
				"tags": [
					"Outlet"
				],
				"summary": "Query brand labels for an outlet by ID.",
				"operationId": "assignedBrandLabelsByUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryBrandLabels"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/communication-data": {
			"get": {
				"tags": [
					"Communications",
					"Outlet",
					"Services"
				],
				"summary": "Query all communication data",
				"description": "Query communication data by {outletId}",
				"operationId": "communicationDataByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryCommunicationData"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/contracts": {
			"get": {
				"tags": [
					"Contracts",
					"Outlet"
				],
				"summary": "Query contracts of an Outlet.",
				"operationId": "contractsByUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The ID of the registered office of a company to get the contracts for.",
						"required": true,
						"type": "string",
						"x-example": "GS0000001"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryContracts"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/dealer-group": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query dealer group by headquarter outlet ID or member outlet ID",
				"operationId": "outletByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "activeOnly",
						"in": "query",
						"description": "Query only active Dealer Group",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "outletId",
						"in": "path",
						"description": "The headquarter outlet ID or member outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryDealerGroups"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/external-keys": {
			"get": {
				"tags": [
					"External Keys"
				],
				"summary": "Query external keys for an outlet by ID.",
				"operationId": "outletByUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ExternalKeys"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/general-group": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query general group by member outlet ID",
				"operationId": "outletByUsingGET_2",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The member outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryGeneralGroups"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/legalinfo": {
			"get": {
				"tags": [
					"Legal Info"
				],
				"summary": "Query legal info of an outlet",
				"operationId": "outletLegalInfoV1ByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet's id",
						"required": true,
						"type": "string",
						"x-example": "GS1234567"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryLegalInfoOutlet"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/market-area": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query market area by contract partner outlet ID",
				"operationId": "outletByUsingGET_3",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The contract partner outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryMarketAreas"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/market-structure": {
			"get": {
				"tags": [
					"Structures"
				],
				"summary": "Query market structure for an outlet by ID.",
				"operationId": "marketStructureByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "activeOnly",
						"in": "query",
						"description": "Query only active outlets.",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryMarketStructure"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/offered-services": {
			"get": {
				"tags": [
					"Services"
				],
				"summary": "Query offered services for an outlet by ID.",
				"operationId": "offeredServicesByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Offered services found",
						"schema": {
							"$ref": "#/definitions/QueryOfferedServices"
						}
					},
					"204": {
						"description": "No offered services found for this business site ID"
					},
					"404": {
						"description": "No business site found"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/offered-services/opening-hours": {
			"get": {
				"tags": [
					"Opening Hours",
					"Outlet",
					"Services"
				],
				"summary": "Query opening hours of an Outlet.",
				"operationId": "openingHoursByUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "outletId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Opening hours found",
						"schema": {
							"$ref": "#/definitions/QueryOpeningHours"
						}
					},
					"204": {
						"description": "No opening hours found for this business site"
					},
					"404": {
						"description": "No business site found"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/offered-services/{serviceId}/communication-data": {
			"get": {
				"tags": [
					"Communications",
					"Outlet",
					"Services"
				],
				"summary": "Query only offered services communication data",
				"description": "Query communication data by {outletId} and {serviceId}",
				"operationId": "communicationDataByUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID",
						"required": true,
						"type": "string"
					},
					{
						"name": "serviceId",
						"in": "path",
						"description": "The service ID",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryOfferedServicesCommunicationData"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/offered-services/{serviceId}/contracts": {
			"get": {
				"tags": [
					"Contracts",
					"Outlet"
				],
				"summary": "Query contracts by offered service of an Outlet.",
				"operationId": "contractsByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The ID of the registered office of a company to get the contracts for.",
						"required": true,
						"type": "string",
						"x-example": "GS0000001"
					},
					{
						"name": "serviceId",
						"in": "path",
						"description": "ID of the service for which the contracts should be returned.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 1
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryContracts"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/offered-services/{serviceId}/opening-hours": {
			"get": {
				"tags": [
					"Opening Hours",
					"Outlet",
					"Services"
				],
				"summary": "Query opening hours by offered service of an Outlet.",
				"operationId": "openingHoursByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "outletId",
						"required": true,
						"type": "string"
					},
					{
						"name": "serviceId",
						"in": "path",
						"description": "serviceId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Opening hours found",
						"schema": {
							"$ref": "#/definitions/QueryOpeningHours"
						}
					},
					"204": {
						"description": "No opening hours found for this business site and service Id"
					},
					"404": {
						"description": "No business site found"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/relationships": {
			"get": {
				"tags": [
					"Outlet",
					"Relationships"
				],
				"summary": "Query relationship of an Outlet.",
				"operationId": "outletRelationshipByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet ID.",
						"required": true,
						"type": "string",
						"x-example": "GS1234567"
					}
				],
				"responses": {
					"200": {
						"description": "Outlet relationship found",
						"schema": {
							"$ref": "#/definitions/QueryOutletRelationships"
						}
					},
					"404": {
						"description": "No business site found"
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/outlets/{outletId}/spoken-languages": {
			"get": {
				"tags": [
					"Communications",
					"Language",
					"Outlet"
				],
				"summary": "Query spoken languages.",
				"operationId": "spokenLanguagesByUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlets ID",
						"required": true,
						"type": "string",
						"x-example": "GS1234567"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SpokenLanguages"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/product-categories": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product categories.",
				"operationId": "allProductCategoriesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ProductCategory»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/product-categories/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product category by ID.",
				"operationId": "productCategoryByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The product category ID.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 1
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductCategory"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/product-groups": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product groups version 1.",
				"operationId": "allProductGroupsV1UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ProductGroup»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/product-groups/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product group by ID version 1.",
				"operationId": "productGroupV1ByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The product group ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductGroup"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/series": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query all series.",
				"operationId": "allSeriesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Series»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/series/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query series by ID.",
				"operationId": "seriesByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The series ID.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Series"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/service-characteristics": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query service characteristics.",
				"operationId": "allServiceCharacteristicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ServiceCharacteristic»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/service-characteristics/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query service characteristic by ID.",
				"operationId": "serviceCharacteristicByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The service characteristic ID.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 1
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ServiceCharacteristic"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/services": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query services.",
				"operationId": "allServicesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«Service»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v1/services/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query service by ID.",
				"operationId": "serviceByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The service ID.",
						"required": true,
						"type": "integer",
						"format": "int32",
						"x-example": 4
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Service"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v2/opening-hours": {
			"get": {
				"tags": [
					"Base Data",
					"Opening Hours",
					"Outlet",
					"Services"
				],
				"summary": "Query opening hours version 2 with optional outlets / offered service / from (yyyy-MM-dd) / to (yyyy-MM-dd)",
				"operationId": "allOpeningHoursV2UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "companyIds",
						"in": "query",
						"description": "Query by list of company IDs (either outlet IDs or company IDs must be given)",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "fromDate",
						"in": "query",
						"description": "First day of the interval, in the format yyyy-MM-dd",
						"required": false,
						"type": "string",
						"format": "date-time",
						"x-example": "2020-12-31"
					},
					{
						"name": "outletIds",
						"in": "query",
						"description": "Query by list of outlet IDs (either outlet IDs or company IDs must be given)",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					},
					{
						"name": "serviceIds",
						"in": "query",
						"description": "Query by list of services IDs offered by outlet",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "Last day of the interval, in the format yyyy-MM-dd",
						"required": false,
						"type": "string",
						"format": "date-time",
						"x-example": "2020-12-31"
					}
				],
				"responses": {
					"200": {
						"description": "Search query executed properly",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«QueryOpeningHour»»"
						}
					},
					"400": {
						"description": "Both of companyIds and outletIds are empty."
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v2/outlets/{outletId}/legalinfo": {
			"get": {
				"tags": [
					"Legal Info"
				],
				"summary": "Query legal info of an outlet",
				"operationId": "outletLegalInfoV2ByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "outletId",
						"in": "path",
						"description": "The outlet's id",
						"required": true,
						"type": "string",
						"x-example": "GS1234567"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/QueryLegalInfoOutletV2"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v2/product-groups": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product groups version 2.",
				"operationId": "allProductGroupsV2UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The index of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32",
						"x-example": 0
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The size of the page to be returned.",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32",
						"x-example": 10
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedModel«EntityModel«ProductGroupV2»»"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		},
		"/api/v2/product-groups/{id}": {
			"get": {
				"tags": [
					"Base Data"
				],
				"summary": "Query product group by ID version 2.",
				"operationId": "productGroupV2ByUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The product group ID.",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductGroupV2"
						}
					}
				},
				"security": [
					{
						"GSSN+ API-Key": [
							"global"
						]
					}
				]
			}
		}
	},
	"securityDefinitions": {
		"GSSN+ API-Key": {
			"type": "apiKey",
			"name": "x-api-key",
			"in": "header"
		}
	},
	"definitions": {
		"AdditionalAddress": {
			"type": "object",
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2. Etage",
					"description": "Address addition"
				},
				"city": {
					"type": "string",
					"example": "Stuttgart",
					"description": "City"
				},
				"district": {
					"type": "string",
					"example": "Vaihingen",
					"description": "District"
				},
				"street": {
					"type": "string",
					"example": "Hauptstraße",
					"description": "Street"
				},
				"streetNumber": {
					"type": "string",
					"example": "12A",
					"description": "Street number"
				},
				"zipCode": {
					"type": "string",
					"example": 70123,
					"description": "Postal code"
				}
			},
			"title": "AdditionalAddress"
		},
		"AdditionalAddress0": {
			"type": "object",
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2. Etage",
					"description": "Address addition"
				},
				"city": {
					"type": "string",
					"example": "Stuttgart",
					"description": "City"
				},
				"district": {
					"type": "string",
					"example": "Vaihingen",
					"description": "District"
				},
				"street": {
					"type": "string",
					"example": "Hauptstraße",
					"description": "Street"
				},
				"streetNumber": {
					"type": "string",
					"example": "12A",
					"description": "Street number"
				},
				"zipCode": {
					"type": "string",
					"example": 70123,
					"description": "Postal code"
				}
			},
			"title": "AdditionalAddress0"
		},
		"Address": {
			"type": "object",
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2. Etage",
					"description": "Address addition"
				},
				"city": {
					"type": "string",
					"example": "Stuttgart",
					"description": "City"
				},
				"country": {
					"description": "Country",
					"$ref": "#/definitions/Country"
				},
				"district": {
					"type": "string",
					"example": "Vaihingen",
					"description": "District"
				},
				"street": {
					"type": "string",
					"example": "Hauptstraße",
					"description": "Street"
				},
				"streetNumber": {
					"type": "string",
					"example": "12A",
					"description": "Street number"
				},
				"zipCode": {
					"type": "string",
					"example": 70123,
					"description": "Postal code"
				}
			},
			"title": "Address"
		},
		"Address0": {
			"type": "object",
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2. Etage",
					"description": "Address addition"
				},
				"city": {
					"type": "string",
					"example": "Stuttgart",
					"description": "City"
				},
				"country": {
					"description": "Country",
					"$ref": "#/definitions/Country0"
				},
				"district": {
					"type": "string",
					"example": "Vaihingen",
					"description": "District"
				},
				"street": {
					"type": "string",
					"example": "Hauptstraße",
					"description": "Street"
				},
				"streetNumber": {
					"type": "string",
					"example": "12A",
					"description": "Street number"
				},
				"zipCode": {
					"type": "string",
					"example": 70123,
					"description": "Postal code"
				}
			},
			"title": "Address0"
		},
		"AddressTranslation": {
			"type": "object",
			"required": [
				"city"
			],
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2ème étage",
					"description": "Address addition translation."
				},
				"city": {
					"type": "string",
					"example": "Munich",
					"description": "City translation."
				},
				"district": {
					"type": "string",
					"example": "Pasing",
					"description": "District translation."
				},
				"street": {
					"type": "string",
					"example": "Hauptstrasse",
					"description": "Street translation."
				},
				"streetNumber": {
					"type": "string",
					"example": 33,
					"description": "Street number translation."
				}
			},
			"title": "AddressTranslation"
		},
		"AddressTranslation0": {
			"type": "object",
			"required": [
				"city"
			],
			"properties": {
				"addressAddition": {
					"type": "string",
					"example": "2ème étage",
					"description": "Address addition translation."
				},
				"city": {
					"type": "string",
					"example": "Munich",
					"description": "City translation."
				},
				"district": {
					"type": "string",
					"example": "Pasing",
					"description": "District translation."
				},
				"street": {
					"type": "string",
					"example": "Hauptstrasse",
					"description": "Street translation."
				},
				"streetNumber": {
					"type": "string",
					"example": 33,
					"description": "Street number translation."
				}
			},
			"title": "AddressTranslation0"
		},
		"Brand": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"name": {
					"type": "string",
					"example": "Mercedes-Benz",
					"description": "The brand name."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "Brand"
		},
		"BrandCode": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"type": "string",
					"example": "MB",
					"description": "Brand ID"
				},
				"brandCode": {
					"type": "string",
					"example": "00000",
					"description": "Brand code"
				}
			},
			"title": "BrandCode"
		},
		"BrandLabel": {
			"type": "object",
			"required": [
				"brands",
				"label"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brands": {
					"type": "array",
					"description": "List of brands.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/BrandResource"
					}
				},
				"label": {
					"$ref": "#/definitions/LabelResource"
				}
			},
			"title": "BrandLabel"
		},
		"BrandResource": {
			"type": "object",
			"required": [
				"brandId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				}
			},
			"title": "BrandResource"
		},
		"BusinessName": {
			"type": "object",
			"required": [
				"brand",
				"businessName"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"description": "Brand associated with business name.",
					"$ref": "#/definitions/OutletBrand"
				},
				"businessName": {
					"type": "string",
					"example": "Willis Garage",
					"description": "The outlet business name."
				}
			},
			"title": "BusinessName"
		},
		"BusinessName0": {
			"type": "object",
			"required": [
				"brand",
				"businessName"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"description": "Brand associated with business name.",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"businessName": {
					"type": "string",
					"example": "Willis Garage",
					"description": "The outlet business name."
				}
			},
			"title": "BusinessName0"
		},
		"BusinessNameTranslation": {
			"type": "object",
			"required": [
				"brand",
				"businessName"
			],
			"properties": {
				"brand": {
					"example": "MB",
					"description": "Brand ID of translated business name.",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"businessName": {
					"type": "string",
					"example": "Garage Willis",
					"description": "Business name translation."
				}
			},
			"title": "BusinessNameTranslation"
		},
		"BusinessNameTranslation0": {
			"type": "object",
			"required": [
				"brandId",
				"businessName"
			],
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "Brand ID of translated business name."
				},
				"businessName": {
					"type": "string",
					"example": "Garage Willis",
					"description": "Business name translation."
				}
			},
			"title": "BusinessNameTranslation0"
		},
		"Catalog": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Catalog active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The catalog ID."
				},
				"name": {
					"type": "string",
					"example": "HighVoltage",
					"description": "The catalog name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Hochspannung"
					},
					"description": "Catalog name translations.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "Catalog"
		},
		"CloseDownReason": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Close down reason ID."
				}
			},
			"title": "CloseDownReason"
		},
		"CloseDownReason0": {
			"type": "object",
			"required": [
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Close down reason ID."
				},
				"name": {
					"type": "string",
					"example": "Insolvency",
					"description": "Close-down reason name."
				},
				"translations": {
					"type": "object",
					"description": "Close-down reason name translations.",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"title": "CloseDownReason0"
		},
		"CompleteCatalog": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Catalog active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The catalog ID."
				},
				"name": {
					"type": "string",
					"example": "HighVoltage",
					"description": "The catalog name."
				},
				"translations": {
					"type": "array",
					"example": {
						"de-DE": "Hochspannung"
					},
					"description": "Catalog name translations.",
					"items": {
						"$ref": "#/definitions/Translation0"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteCatalog"
		},
		"CompleteLegalInfo": {
			"type": "object",
			"properties": {
				"legalFooter": {
					"type": "string",
					"description": "Legal Footer"
				},
				"taxNo": {
					"type": "string",
					"description": "Tax Number"
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/CompleteLegalInfoTranslation"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				},
				"vatNo": {
					"type": "string",
					"description": "Vat Number"
				}
			},
			"title": "CompleteLegalInfo"
		},
		"CompleteLegalInfoTranslation": {
			"type": "object",
			"required": [
				"languageId",
				"translation"
			],
			"properties": {
				"languageId": {
					"type": "string",
					"example": "en-DE",
					"description": "Language Id"
				},
				"translation": {
					"type": "string",
					"description": "Translation Value"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteLegalInfoTranslation"
		},
		"CompleteOfferedService": {
			"type": "object",
			"required": [
				"productCategory",
				"service"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"example": "MB",
					"description": "The brand of offered service.",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"catalogs": {
					"type": "array",
					"description": "The catalogs",
					"items": {
						"$ref": "#/definitions/CompleteCatalog"
					}
				},
				"communications": {
					"type": "array",
					"description": "The communications data for this offered service.",
					"items": {
						"$ref": "#/definitions/QueryCompleteCommunicationData"
					}
				},
				"contractee": {
					"description": "The associated contractee for this offered service",
					"$ref": "#/definitions/QueryCompleteContractee"
				},
				"id": {
					"type": "string",
					"example": "GS00002342-23",
					"description": "ID of the offered service."
				},
				"modelSeriesIds": {
					"type": "array",
					"description": "The model series IDs.",
					"items": {
						"type": "string"
					}
				},
				"nonCustomerFacing": {
					"type": "boolean",
					"example": false,
					"description": "Non customer facing."
				},
				"onlineOnly": {
					"type": "boolean",
					"example": true,
					"description": "Online only."
				},
				"openingHours": {
					"description": "The associated opening hours for this offered service.",
					"$ref": "#/definitions/CompleteOpeningHour"
				},
				"productCategory": {
					"example": 1,
					"description": "The product category ID.",
					"$ref": "#/definitions/CompleteProductCategory"
				},
				"productGroup": {
					"example": "PC",
					"description": "The product group of offered service.",
					"$ref": "#/definitions/CompleteProductGroup"
				},
				"series": {
					"type": "array",
					"description": "The series.",
					"items": {
						"$ref": "#/definitions/CompleteSeries"
					}
				},
				"service": {
					"example": 1,
					"description": "The service of offered service.",
					"$ref": "#/definitions/CompleteService"
				},
				"serviceCharacteristic": {
					"example": 1,
					"description": "The service characteristic ID.",
					"$ref": "#/definitions/CompleteServiceCharacteristic"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-02-12T11:15:25.438Z",
					"description": "Last update timestamp."
				},
				"validity": {
					"description": "Validity of the offered service.",
					"$ref": "#/definitions/CompleteValidity"
				}
			},
			"title": "CompleteOfferedService"
		},
		"CompleteOpeningHour": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"special": {
					"type": "array",
					"description": "The special openinghours.",
					"items": {
						"$ref": "#/definitions/QuerySpecialOpeningHour"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last openinghours update timestamp"
				},
				"weekdays": {
					"type": "array",
					"description": "The openinghours per weekdays.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHourDays"
					}
				}
			},
			"title": "CompleteOpeningHour"
		},
		"CompleteOutlet": {
			"type": "object",
			"required": [
				"companyId",
				"legalName",
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"additionalAddress": {
					"description": "Outlet additional address.",
					"$ref": "#/definitions/AdditionalAddress"
				},
				"address": {
					"description": "Outlet address.",
					"$ref": "#/definitions/Address"
				},
				"affiliate": {
					"type": "boolean",
					"example": false,
					"description": "The company is affiliate"
				},
				"brandCodes": {
					"type": "array",
					"description": "List of brand codes",
					"items": {
						"$ref": "#/definitions/CompleteOutletBrandCode"
					}
				},
				"brandLabels": {
					"description": "List of brand label",
					"$ref": "#/definitions/CompleteOutletBrandLabels"
				},
				"businessNames": {
					"type": "array",
					"description": "Brand specific business names of outlet.",
					"items": {
						"$ref": "#/definitions/BusinessName0"
					}
				},
				"closeDownDate": {
					"type": "string",
					"format": "date",
					"example": "2030-12-31",
					"description": "Close down date of the Outlet"
				},
				"closeDownReason": {
					"description": "List of the close down reasons",
					"$ref": "#/definitions/CloseDownReason0"
				},
				"companyId": {
					"type": "string",
					"example": "GC00000001",
					"description": "Company ID."
				},
				"distributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "Distribution levels.",
					"items": {
						"type": "string"
					}
				},
				"externalKeys": {
					"description": "List of external key",
					"$ref": "#/definitions/ExternalKeys"
				},
				"generalCommunicationData": {
					"type": "array",
					"description": "List of general communications",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryCompleteOutletGeneralCommunication"
					}
				},
				"geoCoordinates": {
					"description": "Geo coordinates",
					"$ref": "#/definitions/GeoCoordinates0"
				},
				"gssnClassicId": {
					"type": "string",
					"example": "XY03701099",
					"description": "GSSN classic ID"
				},
				"legalInfo": {
					"description": "Legal Info",
					"$ref": "#/definitions/CompleteLegalInfo"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Outlet legal name"
				},
				"mainOutlet": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is a main outlet in the marketstructure"
				},
				"nameAddition": {
					"type": "string",
					"example": "Vehicle technology ag & co. kg",
					"description": "The outlet name addition."
				},
				"offeredServices": {
					"type": "array",
					"description": "List of offered service",
					"items": {
						"$ref": "#/definitions/CompleteOfferedService"
					}
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Outlet ID."
				},
				"outletIsActive": {
					"type": "boolean",
					"example": true,
					"description": "The outlet is active"
				},
				"overallUpdateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp including the changes in the Sub-API's."
				},
				"postOfficeBox": {
					"description": "Post office box",
					"$ref": "#/definitions/PostOfficeBox"
				},
				"predecessors": {
					"type": "array",
					"description": "List of predecessors",
					"items": {
						"$ref": "#/definitions/Predecessor0"
					}
				},
				"region": {
					"description": "Region",
					"$ref": "#/definitions/Region0"
				},
				"registeredOffice": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is the registered Office of the company"
				},
				"startOperationDate": {
					"type": "string",
					"format": "date",
					"example": "2000-01-01",
					"description": "Start operation date of the Outlet"
				},
				"successors": {
					"type": "array",
					"description": "List of successors",
					"items": {
						"$ref": "#/definitions/Successor"
					}
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/Translation0"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteOutlet"
		},
		"CompleteOutletBrand": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"name": {
					"type": "string",
					"example": "Mercedes Benz",
					"description": "The brand name."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteOutletBrand"
		},
		"CompleteOutletBrandCode": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"example": "MB",
					"description": "The brand ",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"brandCode": {
					"type": "string",
					"example": "Mercedes Benz",
					"description": "The brand code value."
				}
			},
			"title": "CompleteOutletBrandCode"
		},
		"CompleteOutletBrandLabel": {
			"type": "object",
			"required": [
				"brands",
				"label"
			],
			"properties": {
				"brands": {
					"type": "array",
					"description": "List of brands.",
					"items": {
						"$ref": "#/definitions/CompleteOutletBrand"
					}
				},
				"label": {
					"$ref": "#/definitions/CompleteOutletLabel"
				}
			},
			"title": "CompleteOutletBrandLabel"
		},
		"CompleteOutletBrandLabels": {
			"type": "object",
			"properties": {
				"assignedBrandLabels": {
					"type": "array",
					"description": "List of brand labels.",
					"items": {
						"$ref": "#/definitions/CompleteOutletBrandLabel"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteOutletBrandLabels"
		},
		"CompleteOutletLabel": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"assignableTo": {
					"type": "array",
					"example": [
						"BRAND"
					],
					"description": "The type of the label.",
					"items": {
						"type": "string"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The label ID."
				},
				"name": {
					"type": "string",
					"example": "Workshop Without Contract",
					"description": "The label name."
				},
				"restrictedToBrandIds": {
					"type": "array",
					"example": [
						"MB"
					],
					"description": "List of brand IDs this label is restricted to.",
					"items": {
						"$ref": "#/definitions/QueryLabelBrandResource"
					}
				},
				"restrictedToCountryIds": {
					"type": "array",
					"example": [
						"DE"
					],
					"description": "List of country IDs in ISO 3166-2 format this label is restricted to.",
					"items": {
						"$ref": "#/definitions/QueryLabelCountryResource"
					}
				},
				"restrictedToDistributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "List of distribution levels this label is restricted to.",
					"items": {
						"type": "string"
					}
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Werkstatt ohne Vertrag"
					},
					"description": "Translations for the label's name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteOutletLabel"
		},
		"CompleteProductCategory": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": 1,
					"description": "The Product Category ID."
				},
				"name": {
					"type": "string",
					"example": "Vehicles",
					"description": "The Product Category Name."
				},
				"translations": {
					"type": "array",
					"description": "Translations.",
					"items": {
						"$ref": "#/definitions/Translation0"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteProductCategory"
		},
		"CompleteProductGroup": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "BUS",
					"description": "The Product Group ID."
				},
				"name": {
					"type": "string",
					"example": "Bus",
					"description": "The Product Group name."
				},
				"translation": {
					"type": "object",
					"description": "Product group name translation",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteProductGroup"
		},
		"CompleteSeries": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The series ID."
				},
				"name": {
					"type": "string",
					"example": "C-Class Sedan",
					"description": "The series name."
				},
				"translations": {
					"type": "array",
					"example": {
						"de-DE": "C-Klasse Limousine"
					},
					"description": "Translations for series name",
					"items": {
						"$ref": "#/definitions/Translation0"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteSeries"
		},
		"CompleteService": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 42,
					"description": "Service ID."
				},
				"name": {
					"type": "string",
					"example": "Used Vehicles Trade",
					"description": "The Service name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Gebrauchtfahrzeuge",
						"en-US": "Used Vehicles Sales"
					},
					"description": "Translations for the service name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last service update timestamp"
				}
			},
			"title": "CompleteService"
		},
		"CompleteServiceCharacteristic": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service characteristic active."
				},
				"id": {
					"type": "string",
					"example": 1,
					"description": "The Service Characteristic ID."
				},
				"name": {
					"type": "string",
					"example": "special",
					"description": "The Service Characteristic Name."
				},
				"translations": {
					"type": "array",
					"description": "Translations.",
					"items": {
						"$ref": "#/definitions/Translation0"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "CompleteServiceCharacteristic"
		},
		"CompleteValidity": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"application": {
					"type": "boolean",
					"example": true,
					"description": "is application"
				},
				"applicationValidUntil": {
					"type": "string",
					"format": "date",
					"example": "2018-12-31",
					"description": "application valid until"
				},
				"valid": {
					"type": "boolean",
					"example": true,
					"description": "is valid",
					"readOnly": true
				},
				"validFrom": {
					"type": "string",
					"format": "date",
					"example": "2019-01-01",
					"description": "valid from"
				},
				"validUntil": {
					"type": "string",
					"format": "date",
					"example": "2019-01-01",
					"description": "valid until"
				}
			},
			"title": "CompleteValidity"
		},
		"Country": {
			"type": "object",
			"required": [
				"daimlerCountryId",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"daimlerCountryId": {
					"type": "string",
					"example": 200,
					"description": "The Daimler specific country ID."
				},
				"defaultLanguage": {
					"example": "de-DE",
					"description": "The default language of the country.",
					"$ref": "#/definitions/CountryLanguage"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format"
				},
				"languages": {
					"type": "array",
					"example": [
						"de-DE",
						"de-CH"
					],
					"description": "The IDs of the languages as locale",
					"items": {
						"$ref": "#/definitions/CountryLanguage"
					}
				},
				"name": {
					"type": "string",
					"example": "Deutschland",
					"description": "The country name."
				},
				"timeZone": {
					"type": "string",
					"example": 3600,
					"description": "The offset from UTC (in seconds) for the given country."
				},
				"translations": {
					"type": "object",
					"example": {
						"en-US": "Germany",
						"it-IT": "la Germania",
						"es-ES": "Alemania"
					},
					"description": "Translations of the country name.",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"title": "Country"
		},
		"Country0": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format"
				}
			},
			"title": "Country0"
		},
		"CountryGroup": {
			"type": "object",
			"required": [
				"countries",
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countries": {
					"type": "array",
					"description": "Countries belonging to this country group",
					"items": {
						"$ref": "#/definitions/CountryGroupCountry"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Country group ID"
				},
				"name": {
					"type": "string",
					"example": "Europe",
					"description": "Country group name"
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Europa",
						"en-US": "Europe"
					},
					"description": "Translations map of the country group name (key is the language ID)",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"title": "CountryGroup"
		},
		"CountryGroupCountry": {
			"type": "object",
			"required": [
				"countryId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryId": {
					"type": "string",
					"example": "DE",
					"description": "ID of the country"
				}
			},
			"title": "CountryGroupCountry"
		},
		"CountryLanguage": {
			"type": "object",
			"required": [
				"languageId",
				"name",
				"representation"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"languageId": {
					"type": "string",
					"example": "de-DE",
					"description": "The language ID in ISO 3166-2 format."
				},
				"name": {
					"type": "string",
					"example": "German (Germany)",
					"description": "The language name in english."
				},
				"representation": {
					"type": "string",
					"example": "Deutsch (Deutschland)",
					"description": "The representation in the language itself."
				}
			},
			"title": "CountryLanguage"
		},
		"CountryStructureDescription": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryId": {
					"type": "string",
					"example": "US",
					"description": "Country Id"
				},
				"countryStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Country Structure Description Id"
				},
				"name": {
					"type": "string",
					"example": "01",
					"description": "Name"
				},
				"parentStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Parent Structure Description ID"
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/CountryStructureDescriptionTranslation"
					}
				}
			},
			"title": "CountryStructureDescription"
		},
		"CountryStructureDescriptionTranslation": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"languageId": {
					"type": "string",
					"description": "Language Id"
				},
				"name": {
					"type": "string",
					"description": "Name"
				}
			},
			"title": "CountryStructureDescriptionTranslation"
		},
		"CountryStructures": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureId": {
					"type": "string",
					"example": "A01A_MARKET01",
					"description": "Country Structure ID"
				},
				"name": {
					"type": "string",
					"example": "01",
					"description": "Name"
				},
				"type": {
					"description": "Country Structure Description",
					"$ref": "#/definitions/CountryStructureDescription"
				}
			},
			"title": "CountryStructures"
		},
		"DateRange": {
			"type": "object",
			"required": [
				"startDate"
			],
			"properties": {
				"endDate": {
					"type": "string",
					"format": "date-time",
					"example": "2018-02-12T00:00:00",
					"description": "End of the date/time range. Only outlets changed before this date are returned. Default is 'now'; i.e. outlets changed until now are returned."
				},
				"startDate": {
					"type": "string",
					"format": "date-time",
					"example": "2018-02-11T00:00:00",
					"description": "Start of the date/time range. Only outlets changed at or after this date are returned."
				}
			},
			"title": "DateRange"
		},
		"EntityModel«Brand»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"name": {
					"type": "string",
					"example": "Mercedes-Benz",
					"description": "The brand name."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«Brand»"
		},
		"EntityModel«Catalog»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Catalog active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The catalog ID."
				},
				"name": {
					"type": "string",
					"example": "HighVoltage",
					"description": "The catalog name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Hochspannung"
					},
					"description": "Catalog name translations.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«Catalog»"
		},
		"EntityModel«CloseDownReason»": {
			"type": "object",
			"required": [
				"id",
				"name",
				"validity"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Close-down reason ID."
				},
				"name": {
					"type": "string",
					"example": "Insolvency",
					"description": "Close-down reason name."
				},
				"translations": {
					"type": "object",
					"description": "Close-down reason name translations.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				},
				"validity": {
					"type": "array",
					"example": [
						"COMPANY"
					],
					"description": "Close-down reason validity.",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "EntityModel«CloseDownReason»"
		},
		"EntityModel«CountryGroup»": {
			"type": "object",
			"required": [
				"countries",
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countries": {
					"type": "array",
					"description": "Countries belonging to this country group",
					"items": {
						"$ref": "#/definitions/CountryGroupCountry"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "Country group ID"
				},
				"name": {
					"type": "string",
					"example": "Europe",
					"description": "Country group name"
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Europa",
						"en-US": "Europe"
					},
					"description": "Translations map of the country group name (key is the language ID)",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"title": "EntityModel«CountryGroup»"
		},
		"EntityModel«ExternalKeys»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "The Company ID"
				},
				"externalKeys": {
					"type": "array",
					"description": "List of external keys.",
					"items": {
						"$ref": "#/definitions/ExternalKey"
					}
				},
				"outletId": {
					"type": "string",
					"description": "The Outlet ID"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«ExternalKeys»"
		},
		"EntityModel«Language»": {
			"type": "object",
			"required": [
				"id",
				"name",
				"representation",
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "de-DE",
					"description": "The language ID as locale."
				},
				"name": {
					"type": "string",
					"example": "German (Germany)",
					"description": "The language name in english."
				},
				"representation": {
					"type": "string",
					"example": "Deutsch (Deutschland)",
					"description": "The representation in the language itself."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«Language»"
		},
		"EntityModel«ModelSeries»": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "C205",
					"description": "The model series ID."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«ModelSeries»"
		},
		"EntityModel«Outlet»": {
			"type": "object",
			"required": [
				"companyId",
				"legalName",
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"additionalAddress": {
					"description": "Outlet additional address.",
					"$ref": "#/definitions/AdditionalAddress0"
				},
				"address": {
					"description": "Outlet address.",
					"$ref": "#/definitions/Address0"
				},
				"affiliate": {
					"type": "boolean",
					"example": false,
					"description": "The company is affiliate"
				},
				"brandCodes": {
					"type": "array",
					"description": "List of brand codes",
					"items": {
						"$ref": "#/definitions/BrandCode"
					}
				},
				"businessNames": {
					"type": "array",
					"description": "Brand specific business names of outlet.",
					"items": {
						"$ref": "#/definitions/BusinessName"
					}
				},
				"closeDownDate": {
					"type": "string",
					"format": "date",
					"example": "2030-12-31",
					"description": "Close down date of the Outlet"
				},
				"closeDownReason": {
					"description": "List of the close down reasons",
					"$ref": "#/definitions/CloseDownReason"
				},
				"companyId": {
					"type": "string",
					"example": "GC00000001",
					"description": "Company ID."
				},
				"countryStructures": {
					"type": "array",
					"description": "List of country structures",
					"items": {
						"$ref": "#/definitions/CountryStructures"
					}
				},
				"distributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "Distribution levels.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"geoCoordinates": {
					"description": "Geo coordinates",
					"$ref": "#/definitions/GeoCoordinates"
				},
				"gssnClassicId": {
					"type": "string",
					"example": "XY03701099",
					"description": "GSSN classic ID"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Outlet legal name"
				},
				"mainOutlet": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is a main outlet in the marketstructure"
				},
				"nameAddition": {
					"type": "string",
					"example": "Vehicle technology ag & co. kg",
					"description": "The outlet name addition."
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Outlet ID."
				},
				"outletIsActive": {
					"type": "boolean",
					"example": true,
					"description": "The outlet is active"
				},
				"overallUpdateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp including the changes in the Sub-API's."
				},
				"postOfficeBox": {
					"description": "Post office box",
					"$ref": "#/definitions/PostOfficeBox0"
				},
				"predecessors": {
					"type": "array",
					"description": "List of predecessors",
					"items": {
						"$ref": "#/definitions/Predecessor"
					}
				},
				"region": {
					"description": "Region",
					"$ref": "#/definitions/Region"
				},
				"registeredOffice": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is the registered Office of the company"
				},
				"startOperationDate": {
					"type": "string",
					"format": "date",
					"example": "2000-01-01",
					"description": "Start operation date of the Outlet"
				},
				"successors": {
					"type": "array",
					"description": "List of successors",
					"items": {
						"$ref": "#/definitions/Successor0"
					}
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/Translation"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«Outlet»"
		},
		"EntityModel«ProductCategory»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				},
				"name": {
					"type": "string",
					"example": "Vehicle",
					"description": "The product category name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Fahrzeug"
					},
					"description": "Translations for product category name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«ProductCategory»"
		},
		"EntityModel«ProductGroupV2»": {
			"type": "object",
			"required": [
				"code",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"code": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"name": {
					"type": "string",
					"example": "Passenger car",
					"description": "The product group name."
				},
				"shortName": {
					"type": "string",
					"example": "PC1",
					"description": "The product group short name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": {
							"name": "PKW",
							"shortName": "PKW2"
						}
					},
					"description": "Translations for product group name",
					"additionalProperties": {
						"$ref": "#/definitions/ProductGroupTranslation"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«ProductGroupV2»"
		},
		"EntityModel«ProductGroup»": {
			"type": "object",
			"required": [
				"code",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"code": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"name": {
					"type": "string",
					"example": "Passenger car",
					"description": "The product group name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "PKW"
					},
					"description": "Translations for product group name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«ProductGroup»"
		},
		"EntityModel«QueryCommunicationField»": {
			"type": "object",
			"required": [
				"communicationFieldId",
				"name",
				"type",
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"communicationFieldId": {
					"type": "string",
					"example": "URL",
					"description": "ID of the communication field"
				},
				"format": {
					"type": "string",
					"example": "URL",
					"description": "Format of the communication field"
				},
				"name": {
					"type": "string",
					"example": "Telephone number",
					"description": "Name of the communication field"
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Telefon"
					},
					"description": "Translated name of the communication field",
					"additionalProperties": {
						"type": "string"
					}
				},
				"type": {
					"type": "string",
					"example": "STANDARD",
					"description": "Type of the communication field"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "yyyy-MM-dd'T'HH:mm:ss.SSSX"
				}
			},
			"title": "EntityModel«QueryCommunicationField»"
		},
		"EntityModel«QueryCountry»": {
			"type": "object",
			"required": [
				"daimlerCountryId",
				"isoCode",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"daimlerCountryId": {
					"type": "string",
					"example": 200,
					"description": "The Daimler specific country ID."
				},
				"defaultLanguageId": {
					"example": "de-DE",
					"description": "The default language of the country.",
					"$ref": "#/definitions/CountryLanguage"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format."
				},
				"languages": {
					"type": "array",
					"example": [
						"de-DE",
						"de-CH"
					],
					"description": "The IDs of the languages as locale",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/CountryLanguage"
					}
				},
				"name": {
					"type": "string",
					"example": "Deutschland",
					"description": "The country name."
				},
				"timeZone": {
					"type": "string",
					"example": 3600,
					"description": "The offset from UTC (in seconds) for the given country."
				},
				"translations": {
					"type": "object",
					"example": {
						"en-US": "Germany",
						"it-IT": "la Germania",
						"es-ES": "Alemania"
					},
					"description": "Translations of the country name.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«QueryCountry»"
		},
		"EntityModel«QueryDealerGroup»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "active"
				},
				"country": {
					"example": "DE",
					"description": "Dealer group country ID",
					"$ref": "#/definitions/QueryDealerGroupCountry"
				},
				"dealerGroupId": {
					"type": "string",
					"example": "DG00000001",
					"description": "Dealer Group Id"
				},
				"headquarter": {
					"description": "Dealer group headquarter",
					"$ref": "#/definitions/QueryDealerGroupHeadquarter"
				},
				"members": {
					"type": "array",
					"description": "Dealer group members",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryDealerGroupHeadquarter"
					}
				},
				"name": {
					"type": "string",
					"example": "New Dealer Group",
					"description": "Dealer group name"
				},
				"predecessors": {
					"type": "array",
					"description": "Dealer group predecessors",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryDealerGroupHeadquarter"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "updateTimestamp"
				}
			},
			"title": "EntityModel«QueryDealerGroup»"
		},
		"EntityModel«QueryGeneralGroup»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "General group status"
				},
				"brandProductGroupServices": {
					"type": "array",
					"description": "General group brand product-group services",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryGeneralGroupBrandProductGroupService"
					}
				},
				"country": {
					"description": "General group country",
					"$ref": "#/definitions/QueryGeneralGroupCountry"
				},
				"generalGroupId": {
					"type": "string",
					"example": "GG00000001",
					"description": "General group ID"
				},
				"members": {
					"type": "array",
					"description": "General group members",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryGeneralGroupMembers"
					}
				},
				"name": {
					"type": "string",
					"example": "General Group",
					"description": "General group name"
				},
				"successor": {
					"description": "General group successor",
					"$ref": "#/definitions/QueryGeneralGroupSuccessor"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2021-03-15T08:40:40.555Z",
					"description": "The general group last update timestamp"
				}
			},
			"title": "EntityModel«QueryGeneralGroup»"
		},
		"EntityModel«QueryKeyType»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "COFICO03",
					"description": "The ID of the key type"
				},
				"name": {
					"type": "string",
					"example": "Cofico System ID 3",
					"description": "The name of the key type"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«QueryKeyType»"
		},
		"EntityModel«QueryLabel»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"assignableTo": {
					"type": "array",
					"example": [
						"BRAND"
					],
					"description": "The type of the label.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The label ID."
				},
				"name": {
					"type": "string",
					"example": "Workshop Without Contract",
					"description": "The label name."
				},
				"restrictedToBrandIds": {
					"type": "array",
					"example": [
						"MB"
					],
					"description": "List of brand IDs this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryLabelBrandResource"
					}
				},
				"restrictedToCountryIds": {
					"type": "array",
					"example": [
						"DE"
					],
					"description": "List of country IDs in ISO 3166-2 format this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryLabelCountryResource"
					}
				},
				"restrictedToDistributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "List of distribution levels this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Werkstatt ohne Vertrag"
					},
					"description": "Translations for the label's name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«QueryLabel»"
		},
		"EntityModel«QueryMarketArea»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"categoryId": {
					"type": "string",
					"example": "CV",
					"description": "Category ID"
				},
				"contractPartner": {
					"description": "Contract partner",
					"$ref": "#/definitions/QueryMarketAreaOutlet"
				},
				"country": {
					"example": "GB",
					"description": "Country",
					"$ref": "#/definitions/QueryMarketAreaCountry"
				},
				"marketAreaId": {
					"type": "string",
					"description": "Market area ID"
				},
				"members": {
					"type": "array",
					"description": "Market area members",
					"items": {
						"$ref": "#/definitions/QueryMarketAreaOutlet"
					}
				},
				"name": {
					"type": "string",
					"example": "CV01",
					"description": "Market area name"
				}
			},
			"title": "EntityModel«QueryMarketArea»"
		},
		"EntityModel«QueryOpeningHour»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredService": {
					"description": "The offered service.",
					"$ref": "#/definitions/QueryOfferedService"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "The outlet ID of openinghours."
				},
				"special": {
					"type": "array",
					"description": "The special openinghours.",
					"items": {
						"$ref": "#/definitions/QuerySpecialOpeningHour"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last openinghours update timestamp"
				},
				"weekdays": {
					"type": "array",
					"description": "The openinghours per weekdays.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHourDays"
					}
				}
			},
			"title": "EntityModel«QueryOpeningHour»"
		},
		"EntityModel«Series»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The series ID."
				},
				"name": {
					"type": "string",
					"example": "C-Class Sedan",
					"description": "The series name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "C-Klasse Limousine"
					},
					"description": "Translations for series name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "EntityModel«Series»"
		},
		"EntityModel«ServiceCharacteristic»": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service characteristic active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				},
				"name": {
					"type": "string",
					"example": "Selective Used Cars",
					"description": "The service characteristic name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Selektive Ware",
						"en-US": "Selective Used Cars"
					},
					"description": "Translations for the service characteristic name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last service update timestamp"
				}
			},
			"title": "EntityModel«ServiceCharacteristic»"
		},
		"EntityModel«Service»": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 42,
					"description": "Service ID."
				},
				"name": {
					"type": "string",
					"example": "Used Vehicles Trade",
					"description": "The Service name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Gebrauchtfahrzeuge",
						"en-US": "Used Vehicles Sales"
					},
					"description": "Translations for the service name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last service update timestamp"
				}
			},
			"title": "EntityModel«Service»"
		},
		"ExternalKey": {
			"type": "object",
			"required": [
				"type"
			],
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"type": {
					"type": "string",
					"example": "ADAM-ID",
					"description": "The type of the external key. The following special key types can also be used: BRAND-CODE, ADAM-ID, FEDERAL-ID"
				},
				"value": {
					"type": "string",
					"example": 123456,
					"description": "The value of the external key. May be omitted to query all outlets that have a key of the desired type disregarding the value of the key"
				}
			},
			"title": "ExternalKey"
		},
		"ExternalKeys": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"keys": {
					"type": "array",
					"description": "List of keys",
					"items": {
						"$ref": "#/definitions/Key"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "ExternalKeys"
		},
		"GeoCoordinates": {
			"type": "object",
			"properties": {
				"distance": {
					"description": "Distance in radius of this outlet from the center point",
					"$ref": "#/definitions/GeoCoordinatesDistance0"
				},
				"latitude": {
					"type": "string",
					"example": 48.1768,
					"description": "Latitude - in decimal degrees"
				},
				"longitude": {
					"type": "string",
					"example": 9.9769,
					"description": "Longitude - in decimal degrees"
				}
			},
			"title": "GeoCoordinates"
		},
		"GeoCoordinates0": {
			"type": "object",
			"properties": {
				"distance": {
					"description": "Distance in radius of this outlet from the center point",
					"$ref": "#/definitions/GeoCoordinatesDistance"
				},
				"latitude": {
					"type": "string",
					"example": 48.1768,
					"description": "Latitude - in decimal degrees"
				},
				"longitude": {
					"type": "string",
					"example": 9.9769,
					"description": "Longitude - in decimal degrees"
				}
			},
			"title": "GeoCoordinates0"
		},
		"GeoCoordinatesDistance": {
			"type": "object",
			"required": [
				"unit",
				"value"
			],
			"properties": {
				"unit": {
					"type": "string",
					"description": "The unit of the value.",
					"enum": [
						"KILOMETERS",
						"MILES",
						"km",
						"mi"
					]
				},
				"value": {
					"type": "number",
					"format": "double",
					"example": 2.0,
					"description": "The numerical value of a distance."
				}
			},
			"title": "GeoCoordinatesDistance"
		},
		"GeoCoordinatesDistance0": {
			"type": "object",
			"required": [
				"unit",
				"value"
			],
			"properties": {
				"unit": {
					"type": "string",
					"description": "The unit of the value.",
					"enum": [
						"KILOMETERS",
						"MILES",
						"km",
						"mi"
					]
				},
				"value": {
					"type": "number",
					"format": "double",
					"example": 2.0,
					"description": "The numerical value of a distance."
				}
			},
			"title": "GeoCoordinatesDistance0"
		},
		"GeoSearchArea": {
			"type": "object",
			"required": [
				"latitude",
				"longitude",
				"radius"
			],
			"properties": {
				"latitude": {
					"type": "number",
					"format": "double",
					"example": 48.422167,
					"description": "Latitude of the center point to perform a perimeter search for. Value must be given in decimal degrees format."
				},
				"longitude": {
					"type": "number",
					"format": "double",
					"example": 9.941573,
					"description": "Longitude of the center point to perform a perimeter search for. Value must be given in decimal degrees format."
				},
				"radius": {
					"description": "Definition of a radius around the center point to search for outlets. All outlets that have a maximum distance to the center point that is smaller or equal to this radius will be returned.",
					"$ref": "#/definitions/GeoSearchRadius"
				}
			},
			"title": "GeoSearchArea"
		},
		"GeoSearchRadius": {
			"type": "object",
			"required": [
				"unit",
				"value"
			],
			"properties": {
				"unit": {
					"type": "string",
					"description": "The unit of the value.",
					"enum": [
						"KILOMETERS",
						"MILES",
						"km",
						"mi"
					]
				},
				"value": {
					"type": "number",
					"format": "double",
					"example": 2.0,
					"description": "The numerical value of a distance."
				}
			},
			"title": "GeoSearchRadius"
		},
		"InputStream": {
			"type": "object",
			"title": "InputStream"
		},
		"InputStreamResource": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"file": {
					"type": "file"
				},
				"filename": {
					"type": "string"
				},
				"inputStream": {
					"$ref": "#/definitions/InputStream"
				},
				"open": {
					"type": "boolean"
				},
				"readable": {
					"type": "boolean"
				},
				"uri": {
					"type": "string",
					"format": "uri"
				},
				"url": {
					"type": "string",
					"format": "url"
				}
			},
			"title": "InputStreamResource"
		},
		"Key": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"example": "MB",
					"description": "Brand ID",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"keyType": {
					"type": "string",
					"example": "CF00001",
					"description": "Key Type"
				},
				"productGroup": {
					"example": "BUS",
					"description": "Product Group ID",
					"$ref": "#/definitions/CompleteProductGroup"
				},
				"value": {
					"type": "string",
					"example": "MB",
					"description": "Value"
				}
			},
			"title": "Key"
		},
		"LabelResource": {
			"type": "object",
			"required": [
				"labelId",
				"labelName"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"labelId": {
					"type": "integer",
					"format": "int32",
					"example": 11,
					"description": "The label ID."
				},
				"labelName": {
					"type": "string",
					"example": "Authorized Dealer",
					"description": "The label name"
				}
			},
			"title": "LabelResource"
		},
		"Language": {
			"type": "object",
			"required": [
				"id",
				"name",
				"representation",
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "de-DE",
					"description": "The language ID as locale."
				},
				"name": {
					"type": "string",
					"example": "German (Germany)",
					"description": "The language name in english."
				},
				"representation": {
					"type": "string",
					"example": "Deutsch (Deutschland)",
					"description": "The representation in the language itself."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "Language"
		},
		"Links": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				}
			},
			"title": "Links"
		},
		"MasterDataDataResource": {
			"type": "object",
			"title": "MasterDataDataResource"
		},
		"ModelSeries": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "C205",
					"description": "The model series ID."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "ModelSeries"
		},
		"OfferedService": {
			"type": "object",
			"required": [
				"brandId",
				"catalogIds",
				"id",
				"outletId",
				"productCategoryId",
				"productGroupId",
				"serviceCharacteristicId",
				"serviceId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"example": "MB",
					"description": "The brand ID.",
					"$ref": "#/definitions/OfferedServiceBrand"
				},
				"catalogIds": {
					"type": "array",
					"example": [
						1
					],
					"description": "The catalog IDs.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/OfferedServiceCatalog"
					}
				},
				"id": {
					"type": "string",
					"example": "GS00000001-1",
					"description": "The offered service ID."
				},
				"modelSeriesIds": {
					"type": "array",
					"example": [
						"W169",
						"W242"
					],
					"description": "The model series IDs.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/OfferedServiceModelSeries"
					}
				},
				"nonCustomerFacing": {
					"type": "boolean",
					"example": false,
					"description": "Non customer facing."
				},
				"onlineOnly": {
					"type": "boolean",
					"example": true,
					"description": "Online only."
				},
				"outletId": {
					"example": "GS00000001",
					"description": "The outlet ID.",
					"$ref": "#/definitions/OfferedServiceOutlet"
				},
				"productCategoryId": {
					"example": 1,
					"description": "The product category ID.",
					"$ref": "#/definitions/OfferedServiceProductCategory"
				},
				"productGroupId": {
					"example": "PC",
					"description": "The product group ID.",
					"$ref": "#/definitions/OfferedServiceProductGroup"
				},
				"seriesIds": {
					"type": "array",
					"example": [
						1
					],
					"description": "The series IDs.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/OfferedServiceSeries"
					}
				},
				"serviceCharacteristicId": {
					"example": 1,
					"description": "The service characteristic ID.",
					"$ref": "#/definitions/OfferedServiceServiceCharacteristic"
				},
				"serviceId": {
					"example": 1,
					"description": "The service ID.",
					"$ref": "#/definitions/OfferedServiceService"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-02-12T11:15:25.438Z",
					"description": "Last update timestamp."
				},
				"validity": {
					"description": "Validity of the offered service",
					"$ref": "#/definitions/OfferedServiceValidity"
				}
			},
			"title": "OfferedService"
		},
		"OfferedServiceBrand": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				}
			},
			"title": "OfferedServiceBrand"
		},
		"OfferedServiceCatalog": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The catalog ID."
				}
			},
			"title": "OfferedServiceCatalog"
		},
		"OfferedServiceModelSeries": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"modelSeriesId": {
					"type": "string",
					"example": "W169",
					"description": "The model series IDs."
				}
			},
			"title": "OfferedServiceModelSeries"
		},
		"OfferedServiceOutlet": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "GS00000001",
					"description": "Outlet ID."
				}
			},
			"title": "OfferedServiceOutlet"
		},
		"OfferedServiceProductCategory": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				}
			},
			"title": "OfferedServiceProductCategory"
		},
		"OfferedServiceProductGroup": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				}
			},
			"title": "OfferedServiceProductGroup"
		},
		"OfferedServiceSeries": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"seriesId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The series IDs."
				}
			},
			"title": "OfferedServiceSeries"
		},
		"OfferedServiceService": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 42,
					"description": "The service ID."
				}
			},
			"title": "OfferedServiceService"
		},
		"OfferedServiceServiceCharacteristic": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				}
			},
			"title": "OfferedServiceServiceCharacteristic"
		},
		"OfferedServiceValidity": {
			"type": "object",
			"properties": {
				"application": {
					"type": "boolean",
					"example": true,
					"description": "is application"
				},
				"applicationValidUntil": {
					"type": "string",
					"format": "date",
					"example": "2018-12-31",
					"description": "application valid until"
				},
				"valid": {
					"type": "boolean",
					"example": true,
					"description": "is valid",
					"readOnly": true
				},
				"validFrom": {
					"type": "string",
					"format": "date",
					"example": "2019-01-01",
					"description": "valid from"
				},
				"validUntil": {
					"type": "string",
					"format": "date",
					"example": "2019-01-01",
					"description": "valid until"
				}
			},
			"title": "OfferedServiceValidity"
		},
		"Outlet": {
			"type": "object",
			"required": [
				"companyId",
				"legalName",
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"additionalAddress": {
					"description": "Outlet additional address.",
					"$ref": "#/definitions/AdditionalAddress0"
				},
				"address": {
					"description": "Outlet address.",
					"$ref": "#/definitions/Address0"
				},
				"affiliate": {
					"type": "boolean",
					"example": false,
					"description": "The company is affiliate"
				},
				"brandCodes": {
					"type": "array",
					"description": "List of brand codes",
					"items": {
						"$ref": "#/definitions/BrandCode"
					}
				},
				"businessNames": {
					"type": "array",
					"description": "Brand specific business names of outlet.",
					"items": {
						"$ref": "#/definitions/BusinessName"
					}
				},
				"closeDownDate": {
					"type": "string",
					"format": "date",
					"example": "2030-12-31",
					"description": "Close down date of the Outlet"
				},
				"closeDownReason": {
					"description": "List of the close down reasons",
					"$ref": "#/definitions/CloseDownReason"
				},
				"companyId": {
					"type": "string",
					"example": "GC00000001",
					"description": "Company ID."
				},
				"countryStructures": {
					"type": "array",
					"description": "List of country structures",
					"items": {
						"$ref": "#/definitions/CountryStructures"
					}
				},
				"distributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "Distribution levels.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"geoCoordinates": {
					"description": "Geo coordinates",
					"$ref": "#/definitions/GeoCoordinates"
				},
				"gssnClassicId": {
					"type": "string",
					"example": "XY03701099",
					"description": "GSSN classic ID"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Outlet legal name"
				},
				"mainOutlet": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is a main outlet in the marketstructure"
				},
				"nameAddition": {
					"type": "string",
					"example": "Vehicle technology ag & co. kg",
					"description": "The outlet name addition."
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Outlet ID."
				},
				"outletIsActive": {
					"type": "boolean",
					"example": true,
					"description": "The outlet is active"
				},
				"overallUpdateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp including the changes in the Sub-API's."
				},
				"postOfficeBox": {
					"description": "Post office box",
					"$ref": "#/definitions/PostOfficeBox0"
				},
				"predecessors": {
					"type": "array",
					"description": "List of predecessors",
					"items": {
						"$ref": "#/definitions/Predecessor"
					}
				},
				"region": {
					"description": "Region",
					"$ref": "#/definitions/Region"
				},
				"registeredOffice": {
					"type": "boolean",
					"example": false,
					"description": "The outlet is the registered Office of the company"
				},
				"startOperationDate": {
					"type": "string",
					"format": "date",
					"example": "2000-01-01",
					"description": "Start operation date of the Outlet"
				},
				"successors": {
					"type": "array",
					"description": "List of successors",
					"items": {
						"$ref": "#/definitions/Successor0"
					}
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/Translation"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-07-26T11:15:25.438Z",
					"description": "Last update timestamp."
				}
			},
			"title": "Outlet"
		},
		"OutletBrand": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				}
			},
			"title": "OutletBrand"
		},
		"OutletSearchOfferedService": {
			"type": "object",
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"productGroup": {
					"type": "string",
					"example": "Passenger Car",
					"description": "The product group name."
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"service": {
					"type": "string",
					"example": "Parts-Sales",
					"description": "The service name."
				},
				"serviceId": {
					"type": "integer",
					"format": "int32",
					"example": 7,
					"description": "The service ID."
				}
			},
			"title": "OutletSearchOfferedService"
		},
		"PageMetadata": {
			"type": "object",
			"properties": {
				"number": {
					"type": "integer",
					"format": "int64"
				},
				"size": {
					"type": "integer",
					"format": "int64"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PageMetadata"
		},
		"PagedModel": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel"
		},
		"PagedModel«EntityModel«Brand»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Brand»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Brand»»"
		},
		"PagedModel«EntityModel«Catalog»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Catalog»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Catalog»»"
		},
		"PagedModel«EntityModel«CloseDownReason»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«CloseDownReason»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«CloseDownReason»»"
		},
		"PagedModel«EntityModel«CountryGroup»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«CountryGroup»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«CountryGroup»»"
		},
		"PagedModel«EntityModel«ExternalKeys»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ExternalKeys»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ExternalKeys»»"
		},
		"PagedModel«EntityModel«Language»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Language»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Language»»"
		},
		"PagedModel«EntityModel«ModelSeries»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ModelSeries»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ModelSeries»»"
		},
		"PagedModel«EntityModel«Outlet»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Outlet»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Outlet»»"
		},
		"PagedModel«EntityModel«ProductCategory»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ProductCategory»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ProductCategory»»"
		},
		"PagedModel«EntityModel«ProductGroupV2»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ProductGroupV2»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ProductGroupV2»»"
		},
		"PagedModel«EntityModel«ProductGroup»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ProductGroup»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ProductGroup»»"
		},
		"PagedModel«EntityModel«QueryCommunicationField»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryCommunicationField»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryCommunicationField»»"
		},
		"PagedModel«EntityModel«QueryCountry»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryCountry»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryCountry»»"
		},
		"PagedModel«EntityModel«QueryDealerGroup»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryDealerGroup»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryDealerGroup»»"
		},
		"PagedModel«EntityModel«QueryGeneralGroup»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryGeneralGroup»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryGeneralGroup»»"
		},
		"PagedModel«EntityModel«QueryKeyType»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryKeyType»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryKeyType»»"
		},
		"PagedModel«EntityModel«QueryLabel»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryLabel»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryLabel»»"
		},
		"PagedModel«EntityModel«QueryMarketArea»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryMarketArea»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryMarketArea»»"
		},
		"PagedModel«EntityModel«QueryOpeningHour»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«QueryOpeningHour»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«QueryOpeningHour»»"
		},
		"PagedModel«EntityModel«Series»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Series»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Series»»"
		},
		"PagedModel«EntityModel«ServiceCharacteristic»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«ServiceCharacteristic»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«ServiceCharacteristic»»"
		},
		"PagedModel«EntityModel«Service»»": {
			"type": "object",
			"properties": {
				"_embedded": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityModel«Service»"
					}
				},
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedModel«EntityModel«Service»»"
		},
		"PostOfficeBox": {
			"type": "object",
			"properties": {
				"city": {
					"type": "string",
					"example": "Ulm",
					"description": "PO box city"
				},
				"number": {
					"type": "string",
					"example": 12345,
					"description": "PO box number"
				},
				"zipCode": {
					"type": "string",
					"example": 89075,
					"description": "PO box postal code"
				}
			},
			"title": "PostOfficeBox"
		},
		"PostOfficeBox0": {
			"type": "object",
			"properties": {
				"city": {
					"type": "string",
					"example": "Ulm",
					"description": "PO box city"
				},
				"number": {
					"type": "string",
					"example": 12345,
					"description": "PO box number"
				},
				"zipCode": {
					"type": "string",
					"example": 89075,
					"description": "PO box postal code"
				}
			},
			"title": "PostOfficeBox0"
		},
		"PostOfficeBoxTranslation": {
			"type": "object",
			"required": [
				"city"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Ulm",
					"description": "City translation"
				}
			},
			"title": "PostOfficeBoxTranslation"
		},
		"PostOfficeBoxTranslation0": {
			"type": "object",
			"required": [
				"city"
			],
			"properties": {
				"city": {
					"type": "string",
					"example": "Ulm",
					"description": "City translation"
				}
			},
			"title": "PostOfficeBoxTranslation0"
		},
		"Predecessor": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Predecessor outlet ID."
				}
			},
			"title": "Predecessor"
		},
		"Predecessor0": {
			"type": "object",
			"required": [
				"companyId",
				"legalName"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "GC00000001",
					"description": "Predecessor company ID."
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Predecessor outlet legal name"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Predecessor outlet ID."
				}
			},
			"title": "Predecessor0"
		},
		"ProductCategory": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				},
				"name": {
					"type": "string",
					"example": "Vehicle",
					"description": "The product category name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Fahrzeug"
					},
					"description": "Translations for product category name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "ProductCategory"
		},
		"ProductGroup": {
			"type": "object",
			"required": [
				"code",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"code": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"name": {
					"type": "string",
					"example": "Passenger car",
					"description": "The product group name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "PKW"
					},
					"description": "Translations for product group name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "ProductGroup"
		},
		"ProductGroupTranslation": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"example": "Personenkraftwagen",
					"description": "The name of the product group"
				},
				"shortName": {
					"type": "string",
					"example": "PKW",
					"description": "The short name of the product group"
				}
			},
			"title": "ProductGroupTranslation"
		},
		"ProductGroupV2": {
			"type": "object",
			"required": [
				"code",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"code": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"name": {
					"type": "string",
					"example": "Passenger car",
					"description": "The product group name."
				},
				"shortName": {
					"type": "string",
					"example": "PC1",
					"description": "The product group short name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": {
							"name": "PKW",
							"shortName": "PKW2"
						}
					},
					"description": "Translations for product group name",
					"additionalProperties": {
						"$ref": "#/definitions/ProductGroupTranslation"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "ProductGroupV2"
		},
		"Query": {
			"type": "object",
			"properties": {
				"cities": {
					"type": "array",
					"example": [
						"W*g*"
					],
					"description": "Array of cities. Wildcarding possible. Wildcard character is <b>'\\*'</b>. For example, <b>W\\*g\\*</b> what would match <b>'Washington'</b> and <b>'Waiblingen'</b>",
					"items": {
						"type": "string"
					}
				},
				"companyIds": {
					"type": "array",
					"example": [
						"GC1234567"
					],
					"description": "Array of company IDs. The company ID is also known as GC ID.",
					"items": {
						"type": "string"
					}
				},
				"countryIsoCodes": {
					"type": "array",
					"example": [
						"DE"
					],
					"description": "Array of country ISO 3166-2.",
					"items": {
						"type": "string"
					}
				},
				"distributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "Array of distribution levels.",
					"items": {
						"type": "string"
					}
				},
				"externalKeys": {
					"type": "array",
					"description": "Filters outlets by their external keys. To filter for external keys, use JSON objects with four components: <ul> <li><b>type</b> e.g. 'BRAND-CODE','ADAM-ID', etc. </li> <li><b>brandId</b> e.g. 'MB','FUSO' etc. </li> <li><b>productGroupId</b> e.g. 'PC','BUS' etc.</li> <li><b>value</b> e.g. 'BC12345', etc. </li>Except for the type, any of these components can be omitted.",
					"items": {
						"$ref": "#/definitions/ExternalKey"
					}
				},
				"gssnClassicIds": {
					"type": "array",
					"example": [
						"12345"
					],
					"description": "Array of old GSSN classic outlet IDs.",
					"items": {
						"type": "string"
					}
				},
				"includeApplicants": {
					"type": "boolean",
					"example": false,
					"description": "If outlets with the status \"Applicant\" should be returned. If set to true, outlets with the status \"Applicant\" will be included in the response. Default is false."
				},
				"lastUpdate": {
					"description": "The date range in which the last change of an outlet took place.",
					"$ref": "#/definitions/DateRange"
				},
				"names": {
					"type": "array",
					"example": [
						"*therr*"
					],
					"description": "Array of names. Searches in the outlet’s legal name, in the name addition, in the alias field and in the business names.<br/>Wildcard character is <b>'\\*'</b>. For example, <b>\\*therr\\*</b> would match <b>'Altherr AG'</b> and <b>'Altherr Nutzfahrzeuge-AG'</b>.",
					"items": {
						"type": "string"
					}
				},
				"offeredServices": {
					"type": "array",
					"description": "Filters outlets by their offered services. To filter for offered services, use JSON objects with one or more components: <ul> <li><b>brandId</b> e.g. 'MB','FUSO' etc. </li> <li><b>productGroup</b> e.g. 'Trucks','Vans','Passenger Cars' etc. </li> <li><b>productGroupId</b> e.g. 'TRUCK','VAN','PC' etc. </li> <li><b>service</b> e.g. 'New Vehicle Sales','Repair & Maintenance' etc. </li> <li><b>serviceId</b> e.g. 120, 7 etc. </li>Any of these components can be omitted. But at least one component is needed. Elements are or linked.",
					"items": {
						"$ref": "#/definitions/OutletSearchOfferedService"
					}
				},
				"onlyActive": {
					"type": "boolean",
					"example": true,
					"description": "Controls whether only active outlets should be returned. If set to false, also deactivated outlets will be included in the response."
				},
				"outletIds": {
					"type": "array",
					"example": [
						"GS1234567"
					],
					"description": "Array of outlet IDs. The outlet ID is outlet’s business key, also known as GS ID.",
					"items": {
						"type": "string"
					}
				},
				"provinces": {
					"type": "array",
					"example": [
						"Esslingen"
					],
					"description": "Array of provinces to find outlets in. This will search not only in the province name but also in the translation of the province name.",
					"items": {
						"type": "string"
					}
				},
				"searchArea": {
					"description": "Geographical area to search for business sites.",
					"$ref": "#/definitions/GeoSearchArea"
				},
				"showMainOutletsOnly": {
					"type": "boolean",
					"example": false,
					"description": "If set to false sub outlets will be included in the response.<br />If set to true only main outlets will be included in the response."
				},
				"showRegisteredOfficesOnly": {
					"type": "boolean",
					"example": false,
					"description": "If set to 'true', only registered office outlets will be returned. Default to 'false' if unspecified"
				},
				"states": {
					"type": "array",
					"example": [
						"Baden-Württemberg"
					],
					"description": "Array of states to find outlets in. This will search not only in the state name but also in the translation of the state name.",
					"items": {
						"type": "string"
					}
				},
				"zipCodes": {
					"type": "array",
					"example": [
						"*907*"
					],
					"description": "Array of zip codes. Wildcarding possible. Wildcard character is <b>'\\*'</b>. For example, <b>\\*907\\*</b> would match <b>'89075'</b> and <b>'120907'</b>",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "Query"
		},
		"QueryBrandLabels": {
			"type": "object",
			"required": [
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandLabels": {
					"type": "array",
					"description": "List of brand labels.",
					"items": {
						"$ref": "#/definitions/BrandLabel"
					}
				},
				"outletId": {
					"type": "string",
					"example": "GS0000002",
					"description": "The outlet ID"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryBrandLabels"
		},
		"QueryCommunicationData": {
			"type": "object",
			"required": [
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"generalCommunicationData": {
					"type": "array",
					"description": "The general communication data",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryGeneralCommunicationData"
					}
				},
				"offeredServiceCommunicationData": {
					"type": "array",
					"description": "The offered service communication data",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryOfferedServiceCommunicationData"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "yyyy-MM-dd'T'HH:mm:ss.SSSX"
				}
			},
			"title": "QueryCommunicationData"
		},
		"QueryCommunicationDataField": {
			"type": "object",
			"required": [
				"communicationFieldId",
				"value"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"communicationFieldId": {
					"type": "string",
					"example": "FACEBOOK",
					"description": "The communication field ID"
				},
				"value": {
					"type": "string",
					"example": "https://www.facebook.com/DaimlerAG/",
					"description": "The communication data value"
				}
			},
			"title": "QueryCommunicationDataField"
		},
		"QueryCommunicationField": {
			"type": "object",
			"required": [
				"communicationFieldId",
				"name",
				"type",
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"communicationFieldId": {
					"type": "string",
					"example": "URL",
					"description": "ID of the communication field"
				},
				"format": {
					"type": "string",
					"example": "URL",
					"description": "Format of the communication field"
				},
				"name": {
					"type": "string",
					"example": "Telephone number",
					"description": "Name of the communication field"
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Telefon"
					},
					"description": "Translated name of the communication field",
					"additionalProperties": {
						"type": "string"
					}
				},
				"type": {
					"type": "string",
					"example": "STANDARD",
					"description": "Type of the communication field"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "yyyy-MM-dd'T'HH:mm:ss.SSSX"
				}
			},
			"title": "QueryCommunicationField"
		},
		"QueryCompleteCommunicationData": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"communicationFieldId": {
					"type": "string",
					"description": "The Communication Field ID"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last Update Timestamp"
				},
				"value": {
					"type": "string",
					"description": "The Communication Field Value."
				}
			},
			"title": "QueryCompleteCommunicationData"
		},
		"QueryCompleteContractee": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"contracteeId": {
					"type": "string",
					"example": "GS1234567",
					"description": "The business site ID of the offered service's contractee."
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Contracts partner update timestamp"
				}
			},
			"title": "QueryCompleteContractee"
		},
		"QueryCompleteOutletGeneralCommunication": {
			"type": "object",
			"properties": {
				"brand": {
					"example": "MB",
					"description": "The brand ID.",
					"$ref": "#/definitions/CompleteOutletBrand"
				},
				"communicationData": {
					"description": "The communication data",
					"$ref": "#/definitions/QueryCompleteOutletGeneralCommunicationData"
				}
			},
			"title": "QueryCompleteOutletGeneralCommunication"
		},
		"QueryCompleteOutletGeneralCommunicationData": {
			"type": "object",
			"required": [
				"communicationFieldId",
				"updateTimestamp"
			],
			"properties": {
				"communicationFieldId": {
					"type": "string"
				},
				"updateTimestamp": {
					"type": "string",
					"format": "date-time"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "QueryCompleteOutletGeneralCommunicationData"
		},
		"QueryContract": {
			"type": "object",
			"properties": {
				"contractee": {
					"example": "GS1234567",
					"description": "The contractee ID.",
					"$ref": "#/definitions/QueryContracteeResource"
				},
				"offeredService": {
					"description": "The offered service.",
					"$ref": "#/definitions/QueryContractsOfferedService"
				}
			},
			"title": "QueryContract"
		},
		"QueryContractStatus": {
			"type": "object",
			"required": [
				"brandId",
				"required"
			],
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "Brand ID"
				},
				"disclosures": {
					"type": "string",
					"example": "Entry behind the building",
					"description": "Company disclosures"
				},
				"languageId": {
					"type": "string",
					"example": "DE",
					"description": "Language ID"
				},
				"required": {
					"type": "boolean",
					"example": true,
					"description": "Required"
				},
				"status": {
					"type": "string",
					"example": "n/a",
					"description": "Status"
				}
			},
			"title": "QueryContractStatus"
		},
		"QueryContractStatusV2": {
			"type": "object",
			"required": [
				"brandId",
				"required"
			],
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "Brand ID"
				},
				"companyRelationId": {
					"type": "string",
					"example": "MBAG",
					"description": "Company Relation Id"
				},
				"disclosures": {
					"type": "string",
					"example": "Entry behind the building",
					"description": "Company disclosures"
				},
				"languageId": {
					"type": "string",
					"example": "DE",
					"description": "Language ID"
				},
				"required": {
					"type": "boolean",
					"example": true,
					"description": "Required"
				},
				"status": {
					"type": "string",
					"example": "n/a",
					"description": "Status"
				}
			},
			"title": "QueryContractStatusV2"
		},
		"QueryContracteeResource": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"contracteeId": {
					"type": "string",
					"example": "GS1234567",
					"description": "The contractee ID."
				}
			},
			"title": "QueryContracteeResource"
		},
		"QueryContracts": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredServiceContracts": {
					"type": "array",
					"description": "List of contract per service.",
					"items": {
						"$ref": "#/definitions/QueryContract"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last contracts update timestamp"
				}
			},
			"title": "QueryContracts"
		},
		"QueryContractsOfferedService": {
			"type": "object",
			"required": [
				"productCategoryId",
				"serviceId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"productCategoryId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"serviceCharacteristicId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				},
				"serviceId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service ID."
				}
			},
			"title": "QueryContractsOfferedService"
		},
		"QueryCountry": {
			"type": "object",
			"required": [
				"daimlerCountryId",
				"isoCode",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"daimlerCountryId": {
					"type": "string",
					"example": 200,
					"description": "The Daimler specific country ID."
				},
				"defaultLanguageId": {
					"example": "de-DE",
					"description": "The default language of the country.",
					"$ref": "#/definitions/CountryLanguage"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format."
				},
				"languages": {
					"type": "array",
					"example": [
						"de-DE",
						"de-CH"
					],
					"description": "The IDs of the languages as locale",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/CountryLanguage"
					}
				},
				"name": {
					"type": "string",
					"example": "Deutschland",
					"description": "The country name."
				},
				"timeZone": {
					"type": "string",
					"example": 3600,
					"description": "The offset from UTC (in seconds) for the given country."
				},
				"translations": {
					"type": "object",
					"example": {
						"en-US": "Germany",
						"it-IT": "la Germania",
						"es-ES": "Alemania"
					},
					"description": "Translations of the country name.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryCountry"
		},
		"QueryCountryCountryStructure": {
			"type": "object",
			"required": [
				"countryId",
				"structures"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryId": {
					"type": "string",
					"example": "DE",
					"description": "The country ISO 3166-2 code."
				},
				"structures": {
					"type": "array",
					"example": [
						{
							"countryStructureId": "REGION01",
							"name": "Region 1"
						}
					],
					"description": "The structures of the country structure.",
					"items": {
						"$ref": "#/definitions/QueryCountryStructure"
					}
				}
			},
			"title": "QueryCountryCountryStructure"
		},
		"QueryCountryStructure": {
			"type": "object",
			"required": [
				"countryStructureId",
				"name",
				"structures",
				"type"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureId": {
					"type": "string",
					"example": "A01A_MARKET01",
					"description": "The country structure ID."
				},
				"name": {
					"type": "string",
					"example": "01",
					"description": "The country structure name."
				},
				"structures": {
					"type": "array",
					"example": [
						{
							"countryStructureId": "REGION01",
							"name": "Region 1"
						}
					],
					"description": "The child structures of the current structure.",
					"items": {
						"$ref": "#/definitions/QueryCountryStructure"
					}
				},
				"type": {
					"example": {
						"countryStructureDescriptionId": 3,
						"name": "Market"
					},
					"description": "The country structure description.",
					"$ref": "#/definitions/QueryCountryStructureType"
				}
			},
			"title": "QueryCountryStructure"
		},
		"QueryCountryStructureDescription": {
			"type": "object",
			"required": [
				"countryStructureDescriptionId",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryId": {
					"type": "string",
					"example": "US",
					"description": "The country ISO 3166-2 code"
				},
				"countryStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 2,
					"description": "The country structure description ID."
				},
				"name": {
					"type": "string",
					"example": "Area",
					"description": "The country structure description name."
				},
				"parentStructureDescription": {
					"example": {
						"countryStructureDescriptionId": 1,
						"name": "Region"
					},
					"description": "The parent structure description",
					"$ref": "#/definitions/QueryParentCountryStructureDescription"
				},
				"translations": {
					"type": "array",
					"description": "Translations",
					"items": {
						"$ref": "#/definitions/CountryStructureDescriptionTranslation"
					}
				}
			},
			"title": "QueryCountryStructureDescription"
		},
		"QueryCountryStructureDescriptionStructure": {
			"type": "object",
			"required": [
				"countryStructureDescriptionId",
				"name",
				"structures"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 2,
					"description": "The country structure description ID."
				},
				"name": {
					"type": "string",
					"example": "Area",
					"description": "The country structure description name."
				},
				"structures": {
					"type": "array",
					"example": [
						{
							"countryStructureDescriptionId": 1,
							"name": "Region",
							"structures": [
								{
									"countryStructureDescriptionId": 2,
									"name": "Area"
								}
							]
						}
					],
					"description": "The country structure description structures.",
					"items": {
						"$ref": "#/definitions/QueryCountryStructureDescriptionStructure"
					}
				}
			},
			"title": "QueryCountryStructureDescriptionStructure"
		},
		"QueryCountryStructureType": {
			"type": "object",
			"required": [
				"countryStructureDescriptionId",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 2,
					"description": "The country structure description ID."
				},
				"name": {
					"type": "string",
					"example": "Area",
					"description": "The country structure description name."
				}
			},
			"title": "QueryCountryStructureType"
		},
		"QueryDealerGroup": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "active"
				},
				"country": {
					"example": "DE",
					"description": "Dealer group country ID",
					"$ref": "#/definitions/QueryDealerGroupCountry"
				},
				"dealerGroupId": {
					"type": "string",
					"example": "DG00000001",
					"description": "Dealer Group Id"
				},
				"headquarter": {
					"description": "Dealer group headquarter",
					"$ref": "#/definitions/QueryDealerGroupHeadquarter"
				},
				"members": {
					"type": "array",
					"description": "Dealer group members",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryDealerGroupHeadquarter"
					}
				},
				"name": {
					"type": "string",
					"example": "New Dealer Group",
					"description": "Dealer group name"
				},
				"predecessors": {
					"type": "array",
					"description": "Dealer group predecessors",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryDealerGroupHeadquarter"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "updateTimestamp"
				}
			},
			"title": "QueryDealerGroup"
		},
		"QueryDealerGroupCountry": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format"
				}
			},
			"title": "QueryDealerGroupCountry"
		},
		"QueryDealerGroupHeadquarter": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Outlet legal name"
				},
				"outletId": {
					"type": "string",
					"example": "GS1234567",
					"description": "The Outlet ID."
				}
			},
			"title": "QueryDealerGroupHeadquarter"
		},
		"QueryDealerGroups": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"dealerGroups": {
					"type": "array",
					"description": "The dealer groups of the outlet.",
					"items": {
						"$ref": "#/definitions/QueryDealerGroup"
					}
				}
			},
			"title": "QueryDealerGroups"
		},
		"QueryDirectCountryStructure": {
			"type": "object",
			"required": [
				"countryStructureId",
				"name",
				"type"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureId": {
					"type": "string",
					"example": "A01A_MARKET01",
					"description": "The country structure ID."
				},
				"name": {
					"type": "string",
					"example": "01",
					"description": "The country structure name."
				},
				"type": {
					"example": {
						"countryStructureDescriptionId": 3,
						"name": "Market"
					},
					"description": "The country structure description.",
					"$ref": "#/definitions/QueryCountryStructureType"
				}
			},
			"title": "QueryDirectCountryStructure"
		},
		"QueryDirectCountryStructureHierarchy": {
			"type": "object",
			"required": [
				"children",
				"countryStructureId",
				"name",
				"parent",
				"type"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"children": {
					"type": "array",
					"example": [
						{
							"countryStructureId": "A01A_MARKET01",
							"name": "01"
						}
					],
					"description": "The country structure direct child country structures. If children of child is required, please query by ID of the particular child.",
					"items": {
						"$ref": "#/definitions/QueryDirectCountryStructure"
					}
				},
				"countryStructureId": {
					"type": "string",
					"example": "A01A_MARKET01",
					"description": "The country structure ID."
				},
				"name": {
					"type": "string",
					"example": "01",
					"description": "The country structure name."
				},
				"parent": {
					"example": {
						"countryStructureId": "A01A_MARKET01",
						"name": "01"
					},
					"description": "The country structure direct parent country structure.If parent of parent is required, please query by ID of the particular parent.",
					"$ref": "#/definitions/QueryDirectCountryStructure"
				},
				"type": {
					"example": {
						"countryStructureDescriptionId": 3,
						"name": "Market"
					},
					"description": "The country structure description.",
					"$ref": "#/definitions/QueryCountryStructureType"
				}
			},
			"title": "QueryDirectCountryStructureHierarchy"
		},
		"QueryGeneralCommunicationData": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"communicationData": {
					"description": "The communication fields",
					"$ref": "#/definitions/QueryCommunicationDataField"
				}
			},
			"title": "QueryGeneralCommunicationData"
		},
		"QueryGeneralGroup": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "General group status"
				},
				"brandProductGroupServices": {
					"type": "array",
					"description": "General group brand product-group services",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryGeneralGroupBrandProductGroupService"
					}
				},
				"country": {
					"description": "General group country",
					"$ref": "#/definitions/QueryGeneralGroupCountry"
				},
				"generalGroupId": {
					"type": "string",
					"example": "GG00000001",
					"description": "General group ID"
				},
				"members": {
					"type": "array",
					"description": "General group members",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryGeneralGroupMembers"
					}
				},
				"name": {
					"type": "string",
					"example": "General Group",
					"description": "General group name"
				},
				"successor": {
					"description": "General group successor",
					"$ref": "#/definitions/QueryGeneralGroupSuccessor"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2021-03-15T08:40:40.555Z",
					"description": "The general group last update timestamp"
				}
			},
			"title": "QueryGeneralGroup"
		},
		"QueryGeneralGroupBrand": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"name": {
					"type": "string",
					"example": "Mercedes-benz",
					"description": "Brand name"
				}
			},
			"title": "QueryGeneralGroupBrand"
		},
		"QueryGeneralGroupBrandProductGroupService": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brand": {
					"description": "General group brand",
					"$ref": "#/definitions/QueryGeneralGroupBrand"
				},
				"productGroup": {
					"description": "General group product group",
					"$ref": "#/definitions/QueryGeneralGroupProductGroup"
				},
				"service": {
					"description": "General group service",
					"$ref": "#/definitions/QueryGeneralGroupService"
				}
			},
			"title": "QueryGeneralGroupBrandProductGroupService"
		},
		"QueryGeneralGroupCountry": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"isoCode": {
					"type": "string",
					"example": "DE",
					"description": "The country ISO 3166-2 code"
				},
				"name": {
					"type": "string",
					"example": "Deutschland",
					"description": "The country name."
				}
			},
			"title": "QueryGeneralGroupCountry"
		},
		"QueryGeneralGroupMembers": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Outlet legal name"
				},
				"outletId": {
					"type": "string",
					"example": "GS1234567",
					"description": "The member outlet ID"
				}
			},
			"title": "QueryGeneralGroupMembers"
		},
		"QueryGeneralGroupProductGroup": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"name": {
					"type": "string",
					"example": "Passenger Car",
					"description": "Product group name"
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				}
			},
			"title": "QueryGeneralGroupProductGroup"
		},
		"QueryGeneralGroupService": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"name": {
					"type": "string",
					"example": "Body Repair",
					"description": "Service name"
				},
				"serviceId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service ID."
				}
			},
			"title": "QueryGeneralGroupService"
		},
		"QueryGeneralGroupSuccessor": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"name": {
					"type": "string",
					"example": "John Gill",
					"description": "Successor Name"
				},
				"successorId": {
					"type": "string",
					"example": "GG00000002",
					"description": "General group successor ID."
				}
			},
			"title": "QueryGeneralGroupSuccessor"
		},
		"QueryGeneralGroups": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"generalGroups": {
					"type": "array",
					"description": "The general groups of the outlet.",
					"items": {
						"$ref": "#/definitions/QueryGeneralGroup"
					}
				}
			},
			"title": "QueryGeneralGroups"
		},
		"QueryKeyType": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "string",
					"example": "COFICO03",
					"description": "The ID of the key type"
				},
				"name": {
					"type": "string",
					"example": "Cofico System ID 3",
					"description": "The name of the key type"
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryKeyType"
		},
		"QueryLabel": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"assignableTo": {
					"type": "array",
					"example": [
						"BRAND"
					],
					"description": "The type of the label.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The label ID."
				},
				"name": {
					"type": "string",
					"example": "Workshop Without Contract",
					"description": "The label name."
				},
				"restrictedToBrandIds": {
					"type": "array",
					"example": [
						"MB"
					],
					"description": "List of brand IDs this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryLabelBrandResource"
					}
				},
				"restrictedToCountryIds": {
					"type": "array",
					"example": [
						"DE"
					],
					"description": "List of country IDs in ISO 3166-2 format this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryLabelCountryResource"
					}
				},
				"restrictedToDistributionLevels": {
					"type": "array",
					"example": [
						"RETAILER"
					],
					"description": "List of distribution levels this label is restricted to.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Werkstatt ohne Vertrag"
					},
					"description": "Translations for the label's name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryLabel"
		},
		"QueryLabelBrandResource": {
			"type": "object",
			"properties": {
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID"
				}
			},
			"title": "QueryLabelBrandResource"
		},
		"QueryLabelCountryResource": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"example": "DE",
					"description": "The country ID in ISO 3166-2 format."
				}
			},
			"title": "QueryLabelCountryResource"
		},
		"QueryLegalInfoCompany": {
			"type": "object",
			"required": [
				"companyId"
			],
			"properties": {
				"companyId": {
					"type": "string",
					"example": "GC1234567",
					"description": "Company ID"
				},
				"legalFooter": {
					"type": "string",
					"example": "My Company Ltd., CEO: Jack & Jill",
					"description": "Legal footer of a company"
				},
				"translations": {
					"type": "object",
					"example": {
						"zh-CN": "北京奔驰汽车有限公司"
					},
					"description": "Representation of company's legal footer in a different font set",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Company legal info last update timestamp"
				},
				"vatNo": {
					"type": "string",
					"example": "DE123456789",
					"description": "VAT number of company"
				}
			},
			"title": "QueryLegalInfoCompany"
		},
		"QueryLegalInfoOutlet": {
			"type": "object",
			"required": [
				"companyId",
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "GC1234567",
					"description": "Company ID"
				},
				"contractStatus": {
					"type": "array",
					"description": "Contract status list of outlet",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryContractStatus"
					}
				},
				"legalFooter": {
					"type": "string",
					"example": "My Company Ltd., CEO: Jack & Jill",
					"description": "Legal footer of the company"
				},
				"outletId": {
					"type": "string",
					"example": "GS1234567",
					"description": "Outlet ID"
				},
				"taxNo": {
					"type": "string",
					"example": "123/4567/8901",
					"description": "Tax ID of outlet"
				},
				"translations": {
					"type": "object",
					"example": {
						"zh-CN": "北京奔驰汽车有限公司"
					},
					"description": "Translations of company's legal footer",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:40.555Z",
					"description": "Outlet legal info last update timestamp"
				},
				"vatNo": {
					"type": "string",
					"example": "DE123456789",
					"description": "VAT number of company"
				}
			},
			"title": "QueryLegalInfoOutlet"
		},
		"QueryLegalInfoOutletV2": {
			"type": "object",
			"required": [
				"companyId",
				"outletId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "GC1234567",
					"description": "Company ID"
				},
				"contractStatus": {
					"type": "array",
					"description": "Contract status list of outlet",
					"items": {
						"$ref": "#/definitions/QueryContractStatusV2"
					}
				},
				"legalFooter": {
					"type": "string",
					"example": "My Company Ltd., CEO: Jack & Jill",
					"description": "Legal footer of the company"
				},
				"outletId": {
					"type": "string",
					"example": "GS1234567",
					"description": "Outlet ID"
				},
				"taxNo": {
					"type": "string",
					"example": "123/4567/8901",
					"description": "Tax ID of outlet"
				},
				"translations": {
					"type": "object",
					"example": {
						"zh-CN": "北京奔驰汽车有限公司"
					},
					"description": "Translations of company's legal footer",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:40.555Z",
					"description": "Outlet legal info last update timestamp"
				},
				"vatNo": {
					"type": "string",
					"example": "DE123456789",
					"description": "VAT number of company"
				}
			},
			"title": "QueryLegalInfoOutletV2"
		},
		"QueryMarketArea": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"categoryId": {
					"type": "string",
					"example": "CV",
					"description": "Category ID"
				},
				"contractPartner": {
					"description": "Contract partner",
					"$ref": "#/definitions/QueryMarketAreaOutlet"
				},
				"country": {
					"example": "GB",
					"description": "Country",
					"$ref": "#/definitions/QueryMarketAreaCountry"
				},
				"marketAreaId": {
					"type": "string",
					"description": "Market area ID"
				},
				"members": {
					"type": "array",
					"description": "Market area members",
					"items": {
						"$ref": "#/definitions/QueryMarketAreaOutlet"
					}
				},
				"name": {
					"type": "string",
					"example": "CV01",
					"description": "Market area name"
				}
			},
			"title": "QueryMarketArea"
		},
		"QueryMarketAreaCountry": {
			"type": "object",
			"required": [
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"isoCode": {
					"type": "string",
					"example": "GB",
					"description": "The country ID in ISO 3166-2 format"
				},
				"name": {
					"type": "string",
					"example": "Pentagon Ltd",
					"description": "The country name."
				}
			},
			"title": "QueryMarketAreaCountry"
		},
		"QueryMarketAreaOutlet": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"legalName": {
					"type": "string",
					"example": "Pentagon Ltd",
					"description": "Outlet legal name"
				},
				"outletId": {
					"type": "string",
					"example": "GS1234567",
					"description": "Outlet ID"
				}
			},
			"title": "QueryMarketAreaOutlet"
		},
		"QueryMarketAreas": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"marketAreas": {
					"type": "array",
					"description": "The Market Area of the outlet.",
					"items": {
						"$ref": "#/definitions/QueryMarketArea"
					}
				}
			},
			"title": "QueryMarketAreas"
		},
		"QueryMarketStructure": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "GC0000001",
					"description": "Company ID."
				},
				"companyLegalName": {
					"type": "string",
					"example": "My company",
					"description": "Company legal name."
				},
				"outlets": {
					"type": "array",
					"description": "List of outlets belonging to company.",
					"items": {
						"$ref": "#/definitions/QueryMarketStructureOutlets"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryMarketStructure"
		},
		"QueryMarketStructureOutlets": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "True if the outlet is active, else false."
				},
				"companyId": {
					"type": "string",
					"example": "GC0000001",
					"description": "Company ID."
				},
				"legalName": {
					"type": "string",
					"example": "My business site",
					"description": "Outlet legal name."
				},
				"mainOutlet": {
					"type": "boolean",
					"example": true,
					"description": "True if the outlet is a main outlet, else false."
				},
				"outletId": {
					"type": "string",
					"example": "GS0000001",
					"description": "Outlet ID."
				},
				"registeredOffice": {
					"type": "boolean",
					"example": true,
					"description": "True if this outlet is the company's registered office, else false."
				},
				"subOutlet": {
					"type": "boolean",
					"example": true,
					"description": "True if the outlet is a sub outlet, else false."
				},
				"subOutlets": {
					"type": "array",
					"description": "Sub-outlets of the outlet.",
					"items": {
						"$ref": "#/definitions/QueryMarketStructureOutlets"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "QueryMarketStructureOutlets"
		},
		"QueryMasterData": {
			"type": "object",
			"required": [
				"data",
				"type"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MasterDataDataResource"
					}
				},
				"type": {
					"type": "string"
				}
			},
			"title": "QueryMasterData"
		},
		"QueryOfferedService": {
			"type": "object",
			"required": [
				"productCategoryId",
				"serviceId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"productCategoryId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"serviceCharacteristicId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				},
				"serviceId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service ID."
				}
			},
			"title": "QueryOfferedService"
		},
		"QueryOfferedServiceCommunicationData": {
			"type": "object",
			"required": [
				"productCategoryId",
				"serviceId"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"brandId": {
					"type": "string",
					"example": "MB",
					"description": "The brand ID."
				},
				"communicationData": {
					"type": "array",
					"description": "The communication fields",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryCommunicationDataField"
					}
				},
				"productCategoryId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The product category ID."
				},
				"productGroupId": {
					"type": "string",
					"example": "PC",
					"description": "The product group ID."
				},
				"serviceCharacteristicId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				},
				"serviceId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service ID."
				}
			},
			"title": "QueryOfferedServiceCommunicationData"
		},
		"QueryOfferedServices": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredServices": {
					"type": "array",
					"description": "The offered services of the outlet.",
					"items": {
						"$ref": "#/definitions/OfferedService"
					}
				}
			},
			"title": "QueryOfferedServices"
		},
		"QueryOfferedServicesCommunicationData": {
			"type": "object",
			"required": [
				"updateTimestamp"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredServiceCommunicationData": {
					"type": "array",
					"description": "The offered service communication data",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/QueryOfferedServiceCommunicationData"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "yyyy-MM-dd'T'HH:mm:ss.SSSX"
				}
			},
			"title": "QueryOfferedServicesCommunicationData"
		},
		"QueryOpeningHour": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredService": {
					"description": "The offered service.",
					"$ref": "#/definitions/QueryOfferedService"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "The outlet ID of openinghours."
				},
				"special": {
					"type": "array",
					"description": "The special openinghours.",
					"items": {
						"$ref": "#/definitions/QuerySpecialOpeningHour"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last openinghours update timestamp"
				},
				"weekdays": {
					"type": "array",
					"description": "The openinghours per weekdays.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHourDays"
					}
				}
			},
			"title": "QueryOpeningHour"
		},
		"QueryOpeningHourDays": {
			"type": "object",
			"required": [
				"closed",
				"day",
				"periods"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"closed": {
					"type": "boolean",
					"example": true,
					"description": "The flag if the outlet is open or not."
				},
				"day": {
					"type": "string",
					"example": "MO",
					"description": "The two letter day representation."
				},
				"periods": {
					"type": "array",
					"description": "The period when an outlet is opened.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHoursPeriod"
					}
				}
			},
			"title": "QueryOpeningHourDays"
		},
		"QueryOpeningHours": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"offeredServiceOpeningHours": {
					"type": "array",
					"description": "List of openinghours per service.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHour"
					}
				}
			},
			"title": "QueryOpeningHours"
		},
		"QueryOpeningHoursPeriod": {
			"type": "object",
			"required": [
				"from",
				"until"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"from": {
					"type": "string",
					"example": "08:00",
					"description": "The opening time."
				},
				"until": {
					"type": "string",
					"example": "16:30",
					"description": "The closing time."
				}
			},
			"title": "QueryOpeningHoursPeriod"
		},
		"QueryOutletRelationships": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "The outlet ID for the relationship."
				},
				"outletRelationships": {
					"type": "array",
					"description": "List of relationship in outlet.",
					"items": {
						"$ref": "#/definitions/QueryRelationship"
					}
				}
			},
			"title": "QueryOutletRelationships"
		},
		"QueryParentCountryStructureDescription": {
			"type": "object",
			"required": [
				"countryStructureDescriptionId",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"countryStructureDescriptionId": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The country structure description ID."
				},
				"name": {
					"type": "string",
					"example": "Region",
					"description": "The country structure description name."
				}
			},
			"title": "QueryParentCountryStructureDescription"
		},
		"QueryRelationship": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"relatedOutletId": {
					"type": "string",
					"example": "GS00000002",
					"description": "Outlet ID of the related outlet"
				},
				"relationshipDefCode": {
					"type": "string",
					"example": "related_to_MPC_branch_PC",
					"description": "Relationship of the outlet to its related outlet"
				}
			},
			"title": "QueryRelationship"
		},
		"QuerySpecialOpeningHour": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"example": "2030-01-01",
					"description": "The end date of the special opening hours validity."
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"example": "2020-01-01",
					"description": "The start date of the special opening hours validity."
				},
				"weekdays": {
					"type": "array",
					"description": "The opening hours per weekdays.",
					"items": {
						"$ref": "#/definitions/QueryOpeningHourDays"
					}
				}
			},
			"title": "QuerySpecialOpeningHour"
		},
		"Region": {
			"type": "object",
			"properties": {
				"province": {
					"type": "string",
					"example": "Esslingen",
					"description": "Province"
				},
				"state": {
					"type": "string",
					"example": "Baden Württemberg",
					"description": "State"
				}
			},
			"title": "Region"
		},
		"Region0": {
			"type": "object",
			"properties": {
				"province": {
					"type": "string",
					"example": "Esslingen",
					"description": "Province"
				},
				"state": {
					"type": "string",
					"example": "Baden Württemberg",
					"description": "State"
				}
			},
			"title": "Region0"
		},
		"RegionTranslation": {
			"type": "object",
			"properties": {
				"province": {
					"type": "string",
					"example": "Esslingen",
					"description": "Province"
				},
				"state": {
					"type": "string",
					"example": "Baden Württemberg",
					"description": "State"
				}
			},
			"title": "RegionTranslation"
		},
		"RegionTranslation0": {
			"type": "object",
			"properties": {
				"province": {
					"type": "string",
					"example": "Esslingen",
					"description": "Province"
				},
				"state": {
					"type": "string",
					"example": "Baden Württemberg",
					"description": "State"
				}
			},
			"title": "RegionTranslation0"
		},
		"Series": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 4,
					"description": "The series ID."
				},
				"name": {
					"type": "string",
					"example": "C-Class Sedan",
					"description": "The series name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "C-Klasse Limousine"
					},
					"description": "Translations for series name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last update timestamp."
				}
			},
			"title": "Series"
		},
		"Service": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 42,
					"description": "Service ID."
				},
				"name": {
					"type": "string",
					"example": "Used Vehicles Trade",
					"description": "The Service name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Gebrauchtfahrzeuge",
						"en-US": "Used Vehicles Sales"
					},
					"description": "Translations for the service name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last service update timestamp"
				}
			},
			"title": "Service"
		},
		"ServiceCharacteristic": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"active": {
					"type": "boolean",
					"example": true,
					"description": "Service characteristic active."
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"example": 1,
					"description": "The service characteristic ID."
				},
				"name": {
					"type": "string",
					"example": "Selective Used Cars",
					"description": "The service characteristic name."
				},
				"translations": {
					"type": "object",
					"example": {
						"de-DE": "Selektive Ware",
						"en-US": "Selective Used Cars"
					},
					"description": "Translations for the service characteristic name",
					"additionalProperties": {
						"type": "string"
					}
				},
				"updateTimestamp": {
					"type": "string",
					"example": "2019-11-12T08:40:43.449Z",
					"description": "Last service update timestamp"
				}
			},
			"title": "ServiceCharacteristic"
		},
		"SpokenLanguages": {
			"type": "object",
			"required": [
				"spokenLanguageIds"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"spokenLanguageIds": {
					"type": "array",
					"description": "IDs of spoken languages of the business site.",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				}
			},
			"title": "SpokenLanguages"
		},
		"Successor": {
			"type": "object",
			"required": [
				"companyId",
				"legalName"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"companyId": {
					"type": "string",
					"example": "GC00000001",
					"description": "Successor company ID."
				},
				"legalName": {
					"type": "string",
					"example": "Daimler AG",
					"description": "Successor outlet legal name"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Successor outlet's ID"
				}
			},
			"title": "Successor"
		},
		"Successor0": {
			"type": "object",
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"outletId": {
					"type": "string",
					"example": "GS00000001",
					"description": "Successor outlet's ID"
				}
			},
			"title": "Successor0"
		},
		"Translation": {
			"type": "object",
			"required": [
				"languageId"
			],
			"properties": {
				"address": {
					"description": "Address translation",
					"$ref": "#/definitions/AddressTranslation0"
				},
				"businessNames": {
					"type": "array",
					"description": "Business names translation",
					"items": {
						"$ref": "#/definitions/BusinessNameTranslation0"
					}
				},
				"languageId": {
					"type": "string",
					"example": "fr-FR",
					"description": "Language ID"
				},
				"legalName": {
					"type": "string",
					"example": "Daimler-AG FR.",
					"description": "Legal name translation"
				},
				"nameAddition": {
					"type": "string",
					"example": "Vehicle technology ag & co. kg FR",
					"description": "Name addition translation"
				},
				"postOfficeBox": {
					"description": "Post office box translation",
					"$ref": "#/definitions/PostOfficeBoxTranslation"
				},
				"region": {
					"description": "Region",
					"$ref": "#/definitions/RegionTranslation0"
				}
			},
			"title": "Translation"
		},
		"Translation0": {
			"type": "object",
			"required": [
				"languageId",
				"translation"
			],
			"properties": {
				"_links": {
					"$ref": "#/definitions/Links"
				},
				"languageId": {
					"type": "string",
					"example": "en-US",
					"description": "The Language ID."
				},
				"translation": {
					"type": "string",
					"example": "translation for the specified languageId",
					"description": "Translation."
				}
			},
			"title": "Translation0"
		}
	}
}